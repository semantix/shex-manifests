sdPREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>

# A measured or measurable amount
<Quantity> EXTENDS @<DataType> CLOSED {   
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:value @<decimal>?;                 # Numerical value (with implicit 
                                            # precision) 
    fhir:comparator @<code> AND
      {fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > | ad - how to 
                                            # understand the value 
    fhir:unit @<string>?;                   # Unit representation
    fhir:system @<uri>?;                    # System that defines coded unit form
    fhir:code @<code>?;                     # Coded form of the unit
} AND (

# Constraint: UniqueKey:qty-3
# Human readable:If a code for the unit is present, the system SHALL also be present
# XPath:not(exists(f:code)) or exists(f:system)
# Constraint:code.empty() or system.exists()
# ShEx:

 { fhir:code .? }  OR  { fhir:system . } 

) 

# How the Quantity should be understood and represented.
fhirvs:quantity-comparator ["<" "<=" ">=" ">" "ad"]

#------------------- Age ------------------------------

# A duration of time during which an organism (or a process) has existed
<Age> EXTENDS @<Quantity> CLOSED {   

    a [fhir:Age];
    fhir:nodeRole [fhir:treeRoot]?;
} AND (

# Constraint: UniqueKey:age-1
# Human readable:There SHALL be a code if there is a value and it SHALL be an expression of time.  If system is present, it SHALL be UCUM.  If value is present, it SHALL be positive.
# XPath:(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org') and (not(f:value/@value) or f:value/@value >=0)
# Constraint:(code.exists() or value.empty()) and (system.empty() or system = %ucum) and (value.empty() or value.hasValue().not() or value > 0)
# ShEx:

 {  { fhir:code . }  OR  { fhir:value .? }  AND  {  { fhir:system .? }  OR  { fhir:system ['%ucum']  }  AND  { fhir:value .? }  OR  {  not( fhir:value  . ) }  OR  { fhir:value MinExclusive 0 }  }  } 

)

#---------------------- Data Types -------------------

<DataType> EXTENDS @<Element> CLOSED {
}

<PrimitiveType> EXTENDS @<DataType> CLOSED {   
} 

<boolean> EXTENDS @<DataType> CLOSED {
  fhir:v xsd:boolean;
}

# Primitive Type string
<string> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:string MAXLENGTH 1048576?;   # Primitive value for string
}  

# Primitive Type decimal
<decimal> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:decimal OR xsd:double?;      # Primitive value for decimal
}  

# Primitive Type uri
<uri> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:anyURI?;                     # Primitive value for uri
}

# Primitive Type url
<url> EXTENDS @<uri> CLOSED {   
} 

# Primitive Type uuid
<uuid> EXTENDS @<uri> CLOSED {   
}

# Primitive Type base64Binary
<base64Binary> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:base64Binary?;               # Primitive value for base64Binary
}

# Primitive Type date
<date> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:gYear OR xsd:gYearMonth OR xsd:date?;  # Primitive value for date
}

# Primitive Type dateTime
<dateTime> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime?;  # Primitive value for dateTime
}

# Primitive Type instant
<instant> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:dateTime?;                   # Primitive value for instant
}

# Primitive Type integer
<integer> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:int MININCLUSIVE -2147483648 MAXINCLUSIVE 2147483647?;  # Primitive value for integer
} 

# Primitive Type integer64
<integer64> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:long MININCLUSIVE -9223372036854775808 MAXINCLUSIVE 9223372036854775807?;  # Primitive value for integer64
} 

# Primitive Type time
<time> EXTENDS @<PrimitiveType> CLOSED {   
    fhir:v xsd:time?;                       # Primitive value for time
} 

# Primitive Type id
<id> EXTENDS @<string> CLOSED {   
}

# Primitive Type code
<code> EXTENDS @<string> CLOSED {   
    fhir:v xsd:token?;
}  

# Primitive Type canonical
<canonical> EXTENDS @<uri> CLOSED {   
} 
 
# ------------ common base types ------------
<Base> CLOSED {  }

<Element> EXTENDS @<Base> CLOSED {
  fhir:id xsd:string?;
  fhir:extension @<Extension>*;
}

<Extension> EXTENDS @<DataType> CLOSED {
  fhir:id @<string>?;
  fhir:extension @<Extension>*;
  fhir:url @<uri>;
  fhir:value @<code> OR @<string> OR @<boolean>?;
}

