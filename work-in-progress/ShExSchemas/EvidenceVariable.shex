PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>


start=@<EvidenceVariable> AND {fhir:nodeRole [fhir:treeRoot]}


# A definition of an exposure, outcome, or other variable
<EvidenceVariable> EXTENDS @<MetadataResource> CLOSED {   

    a [fhir:EvidenceVariable];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:url @<EvidenceVariable.url>?;      # Canonical identifier for this 
                                            # evidence variable, represented as 
                                            # a URI (globally unique) 
    fhir:identifier @<OneOrMore_EvidenceVariable.identifier>?;  # Additional identifier for the 
                                            # evidence variable 
    fhir:version @<EvidenceVariable.version>?;  # Business version of the evidence 
                                            # variable 
    fhir:name @<EvidenceVariable.name>?;    # Name for this evidence variable 
                                            # (computer friendly) 
    fhir:title @<EvidenceVariable.title>?;  # Name for this evidence variable 
                                            # (human friendly) 
    fhir:shortTitle @<EvidenceVariable.shortTitle>?;  # Title for use in informal contexts
    fhir:subtitle @<EvidenceVariable.subtitle>?;  # Subordinate title of the 
                                            # EvidenceVariable 
    fhir:status @<EvidenceVariable.status>;  # draft | active | retired | unknown
    fhir:experimental @<EvidenceVariable.experimental>?;  # For testing purposes, not real 
                                            # usage 
    fhir:date @<EvidenceVariable.date>?;    # Date last changed
    fhir:publisher @<EvidenceVariable.publisher>?;  # Name of the publisher 
                                            # (organization or individual) 
    fhir:contact @<OneOrMore_EvidenceVariable.contact>?;  # Contact details for the publisher
    fhir:description @<EvidenceVariable.description>?;  # Natural language description of 
                                            # the evidence variable 
    fhir:note @<OneOrMore_EvidenceVariable.note>?;  # Used for footnotes or explanatory 
                                            # notes 
    fhir:useContext @<OneOrMore_EvidenceVariable.useContext>?;  # The context that the content is 
                                            # intended to support 
    fhir:copyright @<EvidenceVariable.copyright>?;  # Use and/or publishing restrictions
    fhir:approvalDate @<EvidenceVariable.approvalDate>?;  # When the resource was approved by 
                                            # publisher 
    fhir:lastReviewDate @<EvidenceVariable.lastReviewDate>?;  # When the resource was last reviewed
    fhir:effectivePeriod @<EvidenceVariable.effectivePeriod>?;  # When the resource is expected to 
                                            # be used 
    fhir:author @<OneOrMore_EvidenceVariable.author>?;  # Who authored the content
    fhir:editor @<OneOrMore_EvidenceVariable.editor>?;  # Who edited the content
    fhir:reviewer @<OneOrMore_EvidenceVariable.reviewer>?;  # Who reviewed the content
    fhir:endorser @<OneOrMore_EvidenceVariable.endorser>?;  # Who endorsed the content
    fhir:relatedArtifact @<OneOrMore_EvidenceVariable.relatedArtifact>?;  # Additional documentation, 
                                            # citations, etc. 
    fhir:actual @<EvidenceVariable.actual>?;  # Actual or conceptual
    fhir:characteristic @<OneOrMore_EvidenceVariable.characteristic>?;  # A defining factor of the 
                                            # EvidenceVariable 
    fhir:handling @<EvidenceVariable.handling>?;  # continuous | dichotomous | ordinal 
                                            # | polychotomous 
    fhir:category @<OneOrMore_EvidenceVariable.category>?;  # A grouping for ordinal or 
                                            # polychotomous variables 
} AND (

# Constraint: UniqueKey:cnl-0
# Human readable:Name should be usable as an identifier for the module by machine processing applications such as code generation
# XPath:not(exists(f:name/@value)) or matches(f:name/@value, '[A-Z]([A-Za-z0-9_]){0,254}')
# Constraint:name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')
# ShEx:

{ fhir:name . } AND { fhir:name { fhir:v /'[A-Z]([A-Za-z0-9_]){0,254}'/ }  }

) AND (

# Constraint: UniqueKey:evv-1
# Human readable:In a characteristic, at most one of these seven elements shall be used: definitionReference or definitionCanonical or definitionCodeableConcept or definitionExpression or definitionId or definitionByTypeAndValue or definitionByCombination
# XPath:count(f:definitionReference)+count(f:definitionCanonical)+count(f:definitionCodeableConcept)+count(f:definitionExpression)+count(f:definitionId)+count(f:definitionByTypeAndValue)+count(f:definitionByCombination)  < 2
# Constraint:(definitionReference.count() + definitionCanonical.count() + definitionCodeableConcept.count() + definitionExpression.count() + definitionId.count() + definitionByTypeAndValue.count() + definitionByCombination.count())  < 2
# ShEx:

( count( fhir:definitionReference ) SHEX_Plus_SHEX  count( fhir:definitionCanonical ) SHEX_Plus_SHEX  count( fhir:definitionCodeableConcept ) SHEX_Plus_SHEX  count( fhir:definitionExpression ) SHEX_Plus_SHEX  count( fhir:definitionId ) SHEX_Plus_SHEX  count( fhir:definitionByTypeAndValue ) SHEX_Plus_SHEX  count( fhir:definitionByCombination )) { fhir:v MaxExclusive 2 } 

)
 

# Observation time from study specified event
<EvidenceVariable.characteristic.timeFromEvent> EXTENDS @<BackboneElement> CLOSED {   
    fhir:description @<EvidenceVariable.characteristic.timeFromEvent.description>?;  # Human readable description
    fhir:note @<OneOrMore_EvidenceVariable.characteristic.timeFromEvent.note>?;  # Used for footnotes or explanatory 
                                            # notes 
    fhir:event (@<CodeableConcept>  OR 
    			@<Reference>  OR 
    			@<dateTime>  OR 
    			@<id> )  AND { rdf:type IRI } ?;  # The event used as a base point 
                                            # (reference point) in time 
    fhir:quantity @<EvidenceVariable.characteristic.timeFromEvent.quantity>?;  # Used to express the observation at 
                                            # a defined amount of time after the 
                                            # study start 
    fhir:range @<EvidenceVariable.characteristic.timeFromEvent.range>?;  # Used to express the observation 
                                            # within a period after the study 
                                            # start 
}  

# Defines the characteristic using type and value
<EvidenceVariable.characteristic.definitionByTypeAndValue> EXTENDS @<BackboneElement> CLOSED {   
    fhir:type (@<CodeableConcept>  OR 
    			(@<Reference>  AND {fhir:link @<EvidenceVariable> })  OR 
    			@<id> )  AND { rdf:type IRI } ;  # Expresses the type of 
                                            # characteristic 
    fhir:value (@<CodeableConcept>  OR 
    			@<boolean>  OR 
    			@<Quantity>  OR 
    			@<Range>  OR 
    			@<Reference>  OR 
    			@<id> )  AND { rdf:type IRI } ;  # Defines the characteristic when 
                                            # coupled with 
                                            # characteristic.type[x] 
    fhir:offset @<EvidenceVariable.characteristic.definitionByTypeAndValue.offset>?;  # Reference point for valueQuantity
}  

# A defining factor of the EvidenceVariable
<EvidenceVariable.characteristic> EXTENDS @<BackboneElement> CLOSED {   
    fhir:linkId @<EvidenceVariable.characteristic.linkId>?;  # Label for internal linking
    fhir:description @<EvidenceVariable.characteristic.description>?;  # Natural language description of 
                                            # the characteristic 
    fhir:note @<OneOrMore_EvidenceVariable.characteristic.note>?;  # Used for footnotes or explanatory 
                                            # notes 
    fhir:exclude @<EvidenceVariable.characteristic.exclude>?;  # Whether the characteristic 
                                            # includes or excludes members 
    fhir:definitionReference @<EvidenceVariable.characteristic.definitionReference> AND {fhir:link 
    			@<Evidence> OR 
    			@<EvidenceVariable> OR 
    			@<Group> }?;  # Defines the characteristic 
                                            # (without using type and value) by 
                                            # a Reference 
    fhir:definitionCanonical @<EvidenceVariable.characteristic.definitionCanonical>?;  # Defines the characteristic 
                                            # (without using type and value) by 
                                            # a Canonical 
    fhir:definitionCodeableConcept @<EvidenceVariable.characteristic.definitionCodeableConcept>?;  # Defines the characteristic 
                                            # (without using type and value) by 
                                            # a CodeableConcept 
    fhir:definitionExpression @<EvidenceVariable.characteristic.definitionExpression>?;  # Defines the characteristic 
                                            # (without using type and value) by 
                                            # a Expression 
    fhir:definitionId @<EvidenceVariable.characteristic.definitionId>?;  # Defines the characteristic 
                                            # (without using type and value) by 
                                            # a id 
    fhir:definitionByTypeAndValue @<EvidenceVariable.characteristic.definitionByTypeAndValue>?;  # Defines the characteristic using 
                                            # type and value 
    fhir:definitionByCombination @<EvidenceVariable.characteristic.definitionByCombination>?;  # Used to specify how two or more 
                                            # characteristics are combined 
    fhir:method @<OneOrMore_EvidenceVariable.characteristic.method>?;  # Method used for describing 
                                            # characteristic 
    fhir:device @<EvidenceVariable.characteristic.device> AND {fhir:link 
    			@<Device> OR 
    			@<DeviceMetric> }?;  # Device used for determining 
                                            # characteristic 
    fhir:timeFromEvent @<OneOrMore_EvidenceVariable.characteristic.timeFromEvent>?;  # Observation time from study 
                                            # specified event 
    fhir:groupMeasure @<EvidenceVariable.characteristic.groupMeasure>?;  # mean | median | mean-of-mean | 
                                            # mean-of-median | median-of-mean | 
                                            # median-of-median 
} AND (

# Constraint: UniqueKey:cnl-0
# Human readable:Name should be usable as an identifier for the module by machine processing applications such as code generation
# XPath:not(exists(f:name/@value)) or matches(f:name/@value, '[A-Z]([A-Za-z0-9_]){0,254}')
# Constraint:name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')
# ShEx:

{ fhir:name . } AND { fhir:name { fhir:v /'[A-Z]([A-Za-z0-9_]){0,254}'/ }  }

) AND (

# Constraint: UniqueKey:evv-1
# Human readable:In a characteristic, at most one of these seven elements shall be used: definitionReference or definitionCanonical or definitionCodeableConcept or definitionExpression or definitionId or definitionByTypeAndValue or definitionByCombination
# XPath:count(f:definitionReference)+count(f:definitionCanonical)+count(f:definitionCodeableConcept)+count(f:definitionExpression)+count(f:definitionId)+count(f:definitionByTypeAndValue)+count(f:definitionByCombination)  < 2
# Constraint:(definitionReference.count() + definitionCanonical.count() + definitionCodeableConcept.count() + definitionExpression.count() + definitionId.count() + definitionByTypeAndValue.count() + definitionByCombination.count())  < 2
# ShEx:

( count( fhir:definitionReference ) SHEX_Plus_SHEX  count( fhir:definitionCanonical ) SHEX_Plus_SHEX  count( fhir:definitionCodeableConcept ) SHEX_Plus_SHEX  count( fhir:definitionExpression ) SHEX_Plus_SHEX  count( fhir:definitionId ) SHEX_Plus_SHEX  count( fhir:definitionByTypeAndValue ) SHEX_Plus_SHEX  count( fhir:definitionByCombination )) { fhir:v MaxExclusive 2 } 

)
 

# Used to specify how two or more characteristics are combined
<EvidenceVariable.characteristic.definitionByCombination> EXTENDS @<BackboneElement> CLOSED {   
    fhir:code @<EvidenceVariable.characteristic.definitionByCombination.code>;  # all-of | any-of | at-least | 
                                            # at-most | statistical | net-effect 
                                            # | dataset 
    fhir:threshold @<EvidenceVariable.characteristic.definitionByCombination.threshold>?;  # Provides the value of "n" when 
                                            # "at-least" or "at-most" codes are 
                                            # used 
    fhir:characteristic @<OneOrMore_EvidenceVariable.characteristic>;  # A defining factor of the 
                                            # characteristic 
}  

# A grouping for ordinal or polychotomous variables
<EvidenceVariable.category> EXTENDS @<BackboneElement> CLOSED {   
    fhir:name @<EvidenceVariable.category.name>?;  # Description of the grouping
    fhir:value (@<CodeableConcept>  OR 
    			@<Quantity>  OR 
    			@<Range> )  AND { rdf:type IRI } ?;  # Definition of the grouping
}  

#---------------------- Data Types -------------------

# Primitive Type dateTime
<dateTime> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:dateTime];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v @<dateTime.value>?;              # Primitive value for dateTime
}  

# Primitive Type boolean
<boolean> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:boolean];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v @<boolean.value>?;               # Primitive value for boolean
}  

# A reference from one resource to another
<Reference> EXTENDS @<DataType> CLOSED {   

    a [fhir:Reference];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:link IRI?;
    fhir:reference @<Reference.reference>?;  # Literal reference, Relative, 
                                            # internal or absolute URL 
    fhir:type @<Reference.type>?;           # Type the reference refers to (e.g. 
                                            # "Patient") 
    fhir:identifier @<Reference.identifier>?;  # Logical reference, when literal 
                                            # reference is not known 
    fhir:display @<Reference.display>?;     # Text alternative for the resource
} AND (

# Constraint: UniqueKey:ref-1
# Human readable:SHALL have a contained resource if a local reference is provided
# XPath:not(starts-with(f:reference/@value, '#')) or exists(ancestor::*[self::f:entry or self::f:parameter]/f:resource/f:*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')]|/*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')])
# Constraint:reference.startsWith('#').not() or (reference.substring(1).trace('url') in %rootResource.contained.id.trace('ids')) or (reference='#' and %rootResource!=%resource)
# ShEx:


)
 

# A measured or measurable amount
<Quantity> EXTENDS @<DataType> CLOSED {   

    a [fhir:Quantity];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:value @<Quantity.value>?;          # Numerical value (with implicit 
                                            # precision) 
    fhir:comparator @<Quantity.comparator>?;  # < | <= | >= | > | ad - how to 
                                            # understand the value 
    fhir:unit @<Quantity.unit>?;            # Unit representation
    fhir:system @<Quantity.system>?;        # System that defines coded unit form
    fhir:code @<Quantity.code>?;            # Coded form of the unit
} AND (

# Constraint: UniqueKey:qty-3
# Human readable:If a code for the unit is present, the system SHALL also be present
# XPath:not(exists(f:code)) or exists(f:system)
# Constraint:code.empty() or system.exists()
# ShEx:

 NOT { fhir:code {fhir:v .} }  OR { fhir:system . }

)
 

# Primitive Type id
<id> EXTENDS @<string> CLOSED {   

    a [fhir:id];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Set of values bounded by low and high
<Range> EXTENDS @<DataType> CLOSED {   

    a [fhir:Range];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:low @<Range.low>?;                 # Low limit
    fhir:high @<Range.high>?;               # High limit
} AND (

# Constraint: UniqueKey:rng-2
# Human readable:If present, low SHALL have a lower value than high
# XPath:not(exists(f:low/f:value/@value)) or not(exists(f:high/f:value/@value)) or (number(f:low/f:value/@value) <= number(f:high/f:value/@value))
# Constraint:low.value.empty() or high.value.empty() or (low <= high)
# ShEx:

 NOT { fhir:low fhir:value {fhir:v .} }  OR  NOT { fhir:high fhir:value {fhir:v .} }  OR ({ fhir:low { fhir:v MaxInclusive { fhir:high } }  })

)
 

# Concept - reference to a terminology or just  text
<CodeableConcept> EXTENDS @<DataType> CLOSED {   

    a [fhir:CodeableConcept];
    fhir:nodeRole [fhir:treeRoot]?;
    a NONLITERAL*;
    fhir:coding @<OneOrMore_CodeableConcept.coding>?;  # Code defined by a terminology 
                                            # system 
    fhir:text @<CodeableConcept.text>?;     # Plain text representation of the 
                                            # concept 
}  

#---------------------- Cardinality Types (OneOrMore) -------------------

<OneOrMore_EvidenceVariable.identifier> CLOSED {
    rdf:first @<EvidenceVariable.identifier>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.identifier> 
}

<OneOrMore_EvidenceVariable.contact> CLOSED {
    rdf:first @<EvidenceVariable.contact>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.contact> 
}

<OneOrMore_EvidenceVariable.note> CLOSED {
    rdf:first @<EvidenceVariable.note>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.note> 
}

<OneOrMore_EvidenceVariable.useContext> CLOSED {
    rdf:first @<EvidenceVariable.useContext>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.useContext> 
}

<OneOrMore_EvidenceVariable.author> CLOSED {
    rdf:first @<EvidenceVariable.author>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.author> 
}

<OneOrMore_EvidenceVariable.editor> CLOSED {
    rdf:first @<EvidenceVariable.editor>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.editor> 
}

<OneOrMore_EvidenceVariable.reviewer> CLOSED {
    rdf:first @<EvidenceVariable.reviewer>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.reviewer> 
}

<OneOrMore_EvidenceVariable.endorser> CLOSED {
    rdf:first @<EvidenceVariable.endorser>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.endorser> 
}

<OneOrMore_EvidenceVariable.relatedArtifact> CLOSED {
    rdf:first @<EvidenceVariable.relatedArtifact>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.relatedArtifact> 
}

<OneOrMore_EvidenceVariable.characteristic> CLOSED {
    rdf:first @<EvidenceVariable.characteristic>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.characteristic> 
}

<OneOrMore_EvidenceVariable.category> CLOSED {
    rdf:first @<EvidenceVariable.category>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.category> 
}

<OneOrMore_EvidenceVariable.characteristic.timeFromEvent.note> CLOSED {
    rdf:first @<EvidenceVariable.characteristic.timeFromEvent.note>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.characteristic.timeFromEvent.note> 
}

<OneOrMore_EvidenceVariable.characteristic.note> CLOSED {
    rdf:first @<EvidenceVariable.characteristic.note>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.characteristic.note> 
}

<OneOrMore_EvidenceVariable.characteristic.method> CLOSED {
    rdf:first @<EvidenceVariable.characteristic.method>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.characteristic.method> 
}

<OneOrMore_EvidenceVariable.characteristic.timeFromEvent> CLOSED {
    rdf:first @<EvidenceVariable.characteristic.timeFromEvent>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_EvidenceVariable.characteristic.timeFromEvent> 
}

<OneOrMore_CodeableConcept.coding> CLOSED {
    rdf:first @<CodeableConcept.coding>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_CodeableConcept.coding> 
}

#---------------------- Reference Types -------------------

#---------------------- Value Sets ------------------------
