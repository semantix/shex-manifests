PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>


start=@<DeviceDefinition> AND {fhir:nodeRole [fhir:treeRoot]}


# An instance of a medical-related component of a medical device
<DeviceDefinition> EXTENDS @<DomainResource> CLOSED {   

    a [fhir:DeviceDefinition];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:description @<markdown>?;          # Additional information to describe 
                                            # the device 
    fhir:identifier @<OneOrMore_Identifier>?;  # Instance identifier
    fhir:udiDeviceIdentifier @<OneOrMore_DeviceDefinition.udiDeviceIdentifier>?;  # Unique Device Identifier (UDI) 
                                            # Barcode string 
    fhir:partNumber @<string>?;             # The part number or catalog number 
                                            # of the device 
    fhir:manufacturer @<Reference> AND {fhir:link 
    			@<Organization> }?;  # Name of device manufacturer
    fhir:deviceName @<OneOrMore_DeviceDefinition.deviceName>?;  # The name or names of the device as 
                                            # given by the manufacturer 
    fhir:modelNumber @<string>?;            # The catalog or model number for 
                                            # the device for example as defined 
                                            # by the manufacturer 
    fhir:classification @<OneOrMore_DeviceDefinition.classification>?;  # What kind of device or device 
                                            # system this is 
    fhir:specialization @<OneOrMore_RelatedArtifact>?;  # The capabilities supported on a  
                                            # device, the standards to which the 
                                            # device conforms for a particular 
                                            # purpose, and used for the 
                                            # communication 
    fhir:hasPart @<OneOrMore_DeviceDefinition.hasPart>?;  # A device, part of the current one
    fhir:packaging @<OneOrMore_DeviceDefinition.packaging>?;  # Information about the packaging of 
                                            # the device, i.e. how the device is 
                                            # packaged 
    fhir:version @<OneOrMore_DeviceDefinition.version>?;  # The version of the device or 
                                            # software 
    fhir:safety @<OneOrMore_CodeableConcept>?;  # Safety characteristics of the 
                                            # device 
    fhir:shelfLifeStorage @<OneOrMore_ProductShelfLife>?;  # Shelf Life and storage information
    fhir:languageCode @<OneOrMore_CodeableConcept>?;  # Language code for the 
                                            # human-readable text strings 
                                            # produced by the device (all 
                                            # supported) 
    fhir:property @<OneOrMore_DeviceDefinition.property>?;  # The potential, valid configuration 
                                            # settings of a device, e.g., 
                                            # regulation status, time properties 
    fhir:owner @<Reference> AND {fhir:link 
    			@<Organization> }?;  # Organization responsible for device
    fhir:contact @<OneOrMore_ContactPoint>?;  # Details for human/organization for 
                                            # support 
    fhir:link @<OneOrMore_DeviceDefinition.link>?;  # An associated device, attached to, 
                                            # used with, communicating with or 
                                            # linking a previous or new device 
                                            # model to the focal device 
    fhir:note @<OneOrMore_Annotation>?;     # Device notes and comments
    fhir:parentDevice @<Reference> AND {fhir:link 
    			@<DeviceDefinition> }?;  # The parent device it can be part of
    fhir:material @<OneOrMore_DeviceDefinition.material>?;  # A substance used to create the 
                                            # material(s) of which the device is 
                                            # made 
    fhir:productionIdentifierInUDI @<OneOrMore_code> AND
    	{fhir:value @fhirvs:device-productidentifierinudi}?;  # lot-number | manufactured-date | 
                                            # serial-number | expiration-date | 
                                            # biological-source | 
                                            # software-version 
    fhir:guideline @<DeviceDefinition.guideline>?;  # Information aimed at providing 
                                            # directions for the usage of this 
                                            # model of device 
    fhir:correctiveAction @<DeviceDefinition.correctiveAction>?;  # Tracking of latest field safety 
                                            # corrective action 
    fhir:chargeItem @<OneOrMore_DeviceDefinition.chargeItem>?;  # Billing code or reference 
                                            # associated with the device 
}  

# Indicates whether and when the device is available on the market
<DeviceDefinition.packaging.udiDeviceIdentifier.marketDistribution> EXTENDS @<BackboneElement> CLOSED {   
    fhir:marketPeriod @<Period>?;           # Begin and end dates for the 
                                            # commercial distribution of the 
                                            # device 
    fhir:subJurisdiction @<uri>?;           # National state or territory where 
                                            # the device is commercialized 
}  

# Allows packages within packages
<DeviceDefinition.packaging.packaging> CLOSED {   
}  

# Tracking of latest field safety corrective action
<DeviceDefinition.correctiveAction> EXTENDS @<BackboneElement> CLOSED {   
    fhir:recall @<boolean>;                 # Whether the corrective action was 
                                            # a recall 
    fhir:scope @<code> AND
    	{fhir:value @fhirvs:device-correctiveactionscope}?;  # model | lot-numbers | 
                                            # serial-numbers 
    fhir:period @<Period>;                  # Start and end dates of the  
                                            # corrective action 
}  

# Information aimed at providing directions for the usage of this model of device
<DeviceDefinition.guideline> EXTENDS @<BackboneElement> CLOSED {   
    fhir:useContext @<OneOrMore_UsageContext>?;  # The circumstances that form the 
                                            # setting for using the device 
    fhir:usageInstruction @<markdown>?;     # Detailed written and visual 
                                            # directions for the user on how to 
                                            # use the device 
    fhir:relatedArtifact @<OneOrMore_RelatedArtifact>?;  # A source of information or 
                                            # reference for this guideline 
    fhir:indication @<OneOrMore_CodeableReference>?;  # A clinical condition for which the 
                                            # device was designed to be used 
    fhir:contraindication @<OneOrMore_CodeableReference>?;  # A specific situation when a device 
                                            # should not be used because it may 
                                            # cause harm 
    fhir:warning @<OneOrMore_CodeableReference>?;  # Specific hazard alert information 
                                            # that a user needs to know before 
                                            # using the device 
    fhir:intendedUse @<string>?;            # A description of the general 
                                            # purpose or medical use of the 
                                            # device or its function 
}  

# Indicates whether and when the device is available on the market
<DeviceDefinition.udiDeviceIdentifier.marketDistribution> EXTENDS @<BackboneElement> CLOSED {   
    fhir:marketPeriod @<Period>;            # Begin and end dates for the 
                                            # commercial distribution of the 
                                            # device 
    fhir:subJurisdiction @<uri>;            # National state or territory where 
                                            # the device is commercialized 
}  

# The potential, valid configuration settings of a device, e.g., regulation status, time properties
<DeviceDefinition.property> EXTENDS @<BackboneElement> CLOSED {   
    fhir:type @<CodeableConcept>;           # Code that specifies the property
    fhir:value (@<Quantity>  OR 
    			@<CodeableConcept>  OR 
    			@<string>  OR 
    			@<boolean>  OR 
    			@<integer>  OR 
    			@<Range>  OR 
    			@<Attachment> )  AND { rdf:type IRI } ;  # Property value - as a code or 
                                            # quantity 
}  

# An associated device, attached to, used with, communicating with or linking a previous or new device model to the focal device
<DeviceDefinition.link> EXTENDS @<BackboneElement> CLOSED {   
    fhir:relation @<Coding>;                # The type indicates the 
                                            # relationship of the related device 
                                            # to the device instance 
    fhir:relatedDevice @<CodeableReference>;  # A reference to the linked device
}  

# What kind of device or device system this is
<DeviceDefinition.classification> EXTENDS @<BackboneElement> CLOSED {   
    fhir:type @<CodeableConcept>;           # A classification or risk class of 
                                            # the device model 
    fhir:justification @<OneOrMore_RelatedArtifact>?;  # Further information qualifying 
                                            # this classification of the device 
                                            # model 
}  

# Information about the packaging of the device, i.e. how the device is packaged
<DeviceDefinition.packaging> EXTENDS @<BackboneElement> CLOSED {   
    fhir:identifier @<Identifier>?;         # Business identifier of the 
                                            # packaged medication 
    fhir:type @<CodeableConcept>?;          # A code that defines the specific 
                                            # type of packaging 
    fhir:count @<integer>?;                 # The number of items contained in 
                                            # the package (devices or 
                                            # sub-packages) 
    fhir:distributor @<OneOrMore_DeviceDefinition.packaging.distributor>?;  # An organization that distributes 
                                            # the packaged device 
    fhir:udiDeviceIdentifier @<OneOrMore_DeviceDefinition.packaging.udiDeviceIdentifier>?;  # Unique Device Identifier (UDI) 
                                            # Barcode string on the packaging 
    fhir:packaging @<OneOrMore_DeviceDefinition.packaging>?;  # Allows packages within packages
}  

# Billing code or reference associated with the device
<DeviceDefinition.chargeItem> EXTENDS @<BackboneElement> CLOSED {   
    fhir:chargeItemCode @<CodeableReference>;  # The code or reference for the 
                                            # charge item 
    fhir:count @<Quantity>;                 # Coefficient applicable to the 
                                            # billing code 
    fhir:effectivePeriod @<Period>?;        # A specific time period in which 
                                            # this charge item applies 
    fhir:useContext @<OneOrMore_UsageContext>?;  # The context to which this charge 
                                            # item applies 
}  

# An organization that distributes the packaged device
<DeviceDefinition.packaging.distributor> EXTENDS @<BackboneElement> CLOSED {   
    fhir:name @<string>?;                   # Distributor's human-readable name
    fhir:organizationReference @<OneOrMore_Reference_Organization>?;  # Distributor as an Organization 
                                            # resource 
}  

# Unique Device Identifier (UDI) Barcode string
<DeviceDefinition.udiDeviceIdentifier> EXTENDS @<BackboneElement> CLOSED {   
    fhir:deviceIdentifier @<string>;        # The identifier that is to be 
                                            # associated with every Device that 
                                            # references this DeviceDefintiion 
                                            # for the issuer and jurisdiction 
                                            # provided in the 
                                            # DeviceDefinition.udiDeviceIdenti-
                                            # fier 
    fhir:issuer @<uri>;                     # The organization that assigns the 
                                            # identifier algorithm 
    fhir:jurisdiction @<uri>;               # The jurisdiction to which the 
                                            # deviceIdentifier applies 
    fhir:marketDistribution @<OneOrMore_DeviceDefinition.udiDeviceIdentifier.marketDistribution>?;  # Indicates whether and when the 
                                            # device is available on the market 
}  

# The version of the device or software
<DeviceDefinition.version> EXTENDS @<BackboneElement> CLOSED {   
    fhir:type @<CodeableConcept>?;          # The type of the device version, 
                                            # e.g. manufacturer, approved, 
                                            # internal 
    fhir:component @<Identifier>?;          # The hardware or software module of 
                                            # the device to which the version 
                                            # applies 
    fhir:value @<string>;                   # The version text
}  

# The name or names of the device as given by the manufacturer
<DeviceDefinition.deviceName> EXTENDS @<BackboneElement> CLOSED {   
    fhir:name @<string>;                    # A name that is used to refer to 
                                            # the device 
    fhir:type @<code> AND
    	{fhir:value @fhirvs:device-nametype};  # registered-name | 
                                            # user-friendly-name | 
                                            # patient-reported-name 
}  

# A device, part of the current one
<DeviceDefinition.hasPart> EXTENDS @<BackboneElement> CLOSED {   
    fhir:reference @<Reference> AND {fhir:link 
    			@<DeviceDefinition> };  # Reference to the part
    fhir:count @<integer>?;                 # Number of occurrences of the part
}  

# Unique Device Identifier (UDI) Barcode string on the packaging
<DeviceDefinition.packaging.udiDeviceIdentifier> EXTENDS @<BackboneElement> CLOSED {   
    fhir:deviceIdentifier @<string>;        # Identifier to be associated with 
                                            # every instance for issuer and 
                                            # jurisdiction 
    fhir:issuer @<uri>;                     # The organization that assigns the 
                                            # identifier algorithm 
    fhir:jurisdiction @<uri>;               # The jurisdiction to which the 
                                            # deviceIdentifier applies 
    fhir:marketDistribution @<DeviceDefinition.packaging.udiDeviceIdentifier.marketDistribution>?;  # Indicates whether and when the 
                                            # device is available on the market 
}  

# A substance used to create the material(s) of which the device is made
<DeviceDefinition.material> EXTENDS @<BackboneElement> CLOSED {   
    fhir:substance @<CodeableConcept>;      # A relevant substance that the 
                                            # device contains, may contain, or 
                                            # is made of 
    fhir:alternate @<boolean>?;             # Indicates an alternative material 
                                            # of the device 
    fhir:allergenicIndicator @<boolean>?;   # Whether the substance is a known 
                                            # or suspected allergen 
}  

#---------------------- Data Types -------------------

# Primitive Type code
<code> EXTENDS @<string> CLOSED {   

    a [fhir:code];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type string
<string> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:string];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:string MAXLENGTH 1048576?;   # Primitive value for string
}  

# A reference from one resource to another
<Reference> EXTENDS @<DataType> CLOSED {   

    a [fhir:Reference];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:link IRI?;
    fhir:reference @<string>?;              # Literal reference, Relative, 
                                            # internal or absolute URL 
    fhir:type @<uri>?;                      # Type the reference refers to (e.g. 
                                            # "Patient") 
    fhir:identifier @<Identifier>?;         # Logical reference, when literal 
                                            # reference is not known 
    fhir:display @<string>?;                # Text alternative for the resource
} AND (

# Constraint: UniqueKey:ref-1
# Human readable:SHALL have a contained resource if a local reference is provided
# XPath:not(starts-with(f:reference/@value, '#')) or exists(ancestor::*[self::f:entry or self::f:parameter]/f:resource/f:*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')]|/*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')])
# Constraint:reference.startsWith('#').not() or (reference.substring(1).trace('url') in %rootResource.contained.id.trace('ids')) or (reference='#' and %rootResource!=%resource)
# ShEx:

 NOT { fhir:reference  SHEX_startsWith_SHEX ('#') } OR ({ fhir:reference SHEX_substring_SHEX (1) SHEX_trace_SHEX ('url') } { fhir:v ['%rootResource'.contained.id SHEX_trace_SHEX ('ids')] } ) OR (({ fhir:reference { fhir:v ['#'] }  }) AND ('%rootResource' { fhir:v [ . -'%resource'] }))

)
 

# Time range defined by start and end date/time
<Period> EXTENDS @<DataType> CLOSED {   

    a [fhir:Period];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:start @<dateTime>?;                # Starting time with inclusive 
                                            # boundary 
    fhir:end @<dateTime>?;                  # End time with inclusive boundary, 
                                            # if not ongoing 
} AND (

# Constraint: UniqueKey:per-1
# Human readable:If present, start SHALL have a lower or equal value than end
# XPath:not(exists(f:start/@value)) or not(exists(f:end/@value)) or (xs:dateTime(f:start/@value) <= xs:dateTime(f:end/@value))
# Constraint:start.hasValue().not() or end.hasValue().not() or (start <= end)
# ShEx:

 NOT { fhir:start  . } OR  NOT { fhir:end  . } OR ({ fhir:start { fhir:v MaxInclusive { fhir:end } }  })

)
 

# A measured or measurable amount
<Quantity> EXTENDS @<DataType> CLOSED {   

    a [fhir:Quantity];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:value @<decimal>?;                 # Numerical value (with implicit 
                                            # precision) 
    fhir:comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > | ad - how to 
                                            # understand the value 
    fhir:unit @<string>?;                   # Unit representation
    fhir:system @<uri>?;                    # System that defines coded unit form
    fhir:code @<code>?;                     # Coded form of the unit
} AND (

# Constraint: UniqueKey:qty-3
# Human readable:If a code for the unit is present, the system SHALL also be present
# XPath:not(exists(f:code)) or exists(f:system)
# Constraint:code.empty() or system.exists()
# ShEx:

 NOT { fhir:code {fhir:v .} }  OR { fhir:system . }

)
 

# Content in a format defined elsewhere
<Attachment> EXTENDS @<DataType> CLOSED {   

    a [fhir:Attachment];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:contentType @<code> AND
    	{fhir:value @fhirvs:mimetypes}?;  # Mime type of the content, with 
                                            # charset etc. 
    fhir:language @<code>?;                 # Human language of the content 
                                            # (BCP-47) 
    fhir:data @<base64Binary>?;             # Data inline, base64ed
    fhir:url @<url>?;                       # Uri where the data can be found
    fhir:size @<integer64>?;                # Number of bytes of content (if url 
                                            # provided) 
    fhir:hash @<base64Binary>?;             # Hash of the data (sha-1, base64ed)
    fhir:title @<string>?;                  # Label to display in place of the 
                                            # data 
    fhir:creation @<dateTime>?;             # Date attachment was first created
    fhir:height @<positiveInt>?;            # Height of the image in pixels 
                                            # (photo/video) 
    fhir:width @<positiveInt>?;             # Width of the image in pixels 
                                            # (photo/video) 
    fhir:frames @<positiveInt>?;            # Number of frames if > 1 (photo)
    fhir:duration @<decimal>?;              # Length in seconds (audio / video)
    fhir:pages @<positiveInt>?;             # Number of printed pages
} AND (

# Constraint: UniqueKey:att-1
# Human readable:If the Attachment has data, it SHALL have a contentType
# XPath:not(exists(f:data)) or exists(f:contentType)
# Constraint:data.empty() or contentType.exists()
# ShEx:

 NOT { fhir:data {fhir:v .} }  OR { fhir:contentType . }

)
 

# Primitive Type integer
<integer> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:integer];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:int MININCLUSIVE -2147483648 MAXINCLUSIVE 2147483647?;  # Primitive value for integer
}  

# Related artifacts for a knowledge resource
<RelatedArtifact> EXTENDS @<DataType> CLOSED {   

    a [fhir:RelatedArtifact];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:type @<code> AND
    	{fhir:value @fhirvs:related-artifact-type};  # documentation | justification | 
                                            # citation | predecessor | successor 
                                            # | derived-from | depends-on | 
                                            # composed-of | part-of | amends | 
                                            # amended-with | appends | 
                                            # appended-with | cites | cited-by | 
                                            # comments-on | comment-in | 
                                            # contains | contained-in | corrects 
                                            # | correction-in | replaces | 
                                            # replaced-with | retracts | 
                                            # retracted-by | signs | similar-to 
                                            # | supports | supported-with | 
                                            # transforms | transformed-into | 
                                            # transformed-with 
    fhir:classifier @<OneOrMore_CodeableConcept>?;  # Additional classifiers
    fhir:label @<string>?;                  # Short label
    fhir:display @<string>?;                # Brief description of the related 
                                            # artifact 
    fhir:citation @<markdown>?;             # Bibliographic citation for the 
                                            # artifact 
    fhir:document @<Attachment>?;           # What document is being referenced
    fhir:resource @<canonical>?;            # What artifact is being referenced
    fhir:resourceReference @<Reference> AND {fhir:link 
    			@<Resource> }?;  # What artifact, if not a 
                                            # conformance resource 
}  

# Set of values bounded by low and high
<Range> EXTENDS @<DataType> CLOSED {   

    a [fhir:Range];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:low @<SimpleQuantity>?;            # Low limit
    fhir:high @<SimpleQuantity>?;           # High limit
} AND (

# Constraint: UniqueKey:rng-2
# Human readable:If present, low SHALL have a lower value than high
# XPath:not(exists(f:low/f:value/@value)) or not(exists(f:high/f:value/@value)) or (number(f:low/f:value/@value) <= number(f:high/f:value/@value))
# Constraint:low.value.empty() or high.value.empty() or (low <= high)
# ShEx:

 NOT { fhir:low fhir:value {fhir:v .} }  OR  NOT { fhir:high fhir:value {fhir:v .} }  OR ({ fhir:low { fhir:v MaxInclusive { fhir:high } }  })

)
 

# Primitive Type uri
<uri> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:uri];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:anyURI?;                     # Primitive value for uri
}  

# The shelf-life and storage information for a medicinal product item or container can be described using this class
<ProductShelfLife> EXTENDS @<BackboneType> CLOSED {   

    a [fhir:ProductShelfLife];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:type @<CodeableConcept>?;          # This describes the shelf life, 
                                            # taking into account various 
                                            # scenarios such as shelf life of 
                                            # the packaged Medicinal Product 
                                            # itself, shelf life after 
                                            # transformation where necessary and 
                                            # shelf life after the first opening 
                                            # of a bottle, etc. The shelf life 
                                            # type shall be specified using an 
                                            # appropriate controlled vocabulary 
                                            # The controlled term and the 
                                            # controlled term identifier shall 
                                            # be specified 
    fhir:period (@<Duration>  OR 
    			@<string> )  AND { rdf:type IRI } ?;  # The shelf life time period can be 
                                            # specified using a numerical value 
                                            # for the period of time and its 
                                            # unit of time measurement The unit 
                                            # of measurement shall be specified 
                                            # in accordance with ISO 11240 and 
                                            # the resulting terminology The 
                                            # symbol and the symbol identifier 
                                            # shall be used 
    fhir:specialPrecautionsForStorage @<OneOrMore_CodeableConcept>?;  # Special precautions for storage, 
                                            # if any, can be specified using an 
                                            # appropriate controlled vocabulary 
                                            # The controlled term and the 
                                            # controlled term identifier shall 
                                            # be specified 
}  

# Text node with attribution
<Annotation> EXTENDS @<DataType> CLOSED {   

    a [fhir:Annotation];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:author ((@<Reference>  AND {fhir:link @<Practitioner> OR 
    			 @<PractitionerRole> OR 
    			 @<Patient> OR 
    			 @<RelatedPerson> OR 
    			 @<Organization> })  OR 
    			@<string> )  AND { rdf:type IRI } ?;  # Individual responsible for the 
                                            # annotation 
    fhir:time @<dateTime>?;                 # When the annotation was made
    fhir:text @<markdown>;                  # The annotation  - text content (as 
                                            # markdown) 
}  

# Details of a Technology mediated contact point (phone, fax, email, etc.)
<ContactPoint> EXTENDS @<DataType> CLOSED {   

    a [fhir:ContactPoint];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:system @<code> AND
    	{fhir:value @fhirvs:contact-point-system}?;  # phone | fax | email | pager | url 
                                            # | sms | other 
    fhir:value @<string>?;                  # The actual contact point details
    fhir:use @<code> AND
    	{fhir:value @fhirvs:contact-point-use}?;  # home | work | temp | old | mobile 
                                            # - purpose of this contact point 
    fhir:rank @<positiveInt>?;              # Specify preferred order of use (1 
                                            # = highest) 
    fhir:period @<Period>?;                 # Time period when the contact point 
                                            # was/is in use 
} AND (

# Constraint: UniqueKey:cpt-2
# Human readable:A system is required if a value is provided.
# XPath:not(exists(f:value)) or exists(f:system)
# Constraint:value.empty() or system.exists()
# ShEx:

 NOT { fhir:value {fhir:v .} }  OR { fhir:system . }

)
 

# An identifier intended for computation
<Identifier> EXTENDS @<DataType> CLOSED {   

    a [fhir:Identifier];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:use @<code> AND
    	{fhir:value @fhirvs:identifier-use}?;  # usual | official | temp | 
                                            # secondary | old (If known) 
    fhir:type @<CodeableConcept>?;          # Description of identifier
    fhir:system @<uri>?;                    # The namespace for the identifier 
                                            # value 
    fhir:value @<string>?;                  # The value that is unique
    fhir:period @<Period>?;                 # Time period when id is/was valid 
                                            # for use 
    fhir:assigner @<Reference> AND {fhir:link 
    			@<Organization> }?;  # Organization that issued id (may 
                                            # be just text) 
}  

# Primitive Type boolean
<boolean> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:boolean];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:boolean?;                    # Primitive value for boolean
}  

# Describes the context of use for a conformance or knowledge resource
<UsageContext> EXTENDS @<DataType> CLOSED {   

    a [fhir:UsageContext];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:code @<Coding>;                    # Type of context being specified
    fhir:value (@<CodeableConcept>  OR 
    			@<Quantity>  OR 
    			@<Range>  OR 
    			(@<Reference>  AND {fhir:link @<PlanDefinition> OR 
    			 @<ResearchStudy> OR 
    			 @<InsurancePlan> OR 
    			 @<HealthcareService> OR 
    			 @<Group> OR 
    			 @<Location> OR 
    			 @<Organization> }) )  AND { rdf:type IRI } ;  # Value that defines the context
}  

# A reference to a code defined by a terminology system
<Coding> EXTENDS @<DataType> CLOSED {   

    a [fhir:Coding];
    fhir:nodeRole [fhir:treeRoot]?;
    a NONLITERAL?;
    fhir:system @<uri>?;                    # Identity of the terminology system
    fhir:version @<string>?;                # Version of the system - if relevant
    fhir:code @<code>?;                     # Symbol in syntax defined by the 
                                            # system 
    fhir:display @<string>?;                # Representation defined by the 
                                            # system 
    fhir:userSelected @<boolean>?;          # If this coding was chosen directly 
                                            # by the user 
}  

# Reference to a resource or a concept
<CodeableReference> EXTENDS @<DataType> CLOSED {   

    a [fhir:CodeableReference];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:concept @<CodeableConcept>?;       # Reference to a concept (by class)
    fhir:reference @<Reference>?;           # Reference to a resource (by 
                                            # instance) 
}  

# Primitive Type markdown
<markdown> EXTENDS @<string> CLOSED {   

    a [fhir:markdown];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Concept - reference to a terminology or just  text
<CodeableConcept> EXTENDS @<DataType> CLOSED {   

    a [fhir:CodeableConcept];
    fhir:nodeRole [fhir:treeRoot]?;
    a NONLITERAL*;
    fhir:coding @<OneOrMore_Coding>?;       # Code defined by a terminology 
                                            # system 
    fhir:text @<string>?;                   # Plain text representation of the 
                                            # concept 
}  

# Primitive Type dateTime
<dateTime> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:dateTime];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime?;  # Primitive value for dateTime
}  

# Primitive Type positiveInt
<positiveInt> EXTENDS @<integer> CLOSED {   

    a [fhir:positiveInt];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type integer64
<integer64> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:integer64];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:long MININCLUSIVE -9223372036854775808 MAXINCLUSIVE 9223372036854775807?;  # Primitive value for integer64
}  

# A fixed quantity (no comparator)
<SimpleQuantity> EXTENDS @<Quantity> CLOSED {   

    a [fhir:SimpleQuantity];
    fhir:nodeRole [fhir:treeRoot]?;
} AND (

# Constraint: UniqueKey:sqty-1
# Human readable:The comparator is not used on a SimpleQuantity
# XPath:not(exists(f:comparator))
# Constraint:comparator.empty()
# ShEx:

 NOT { fhir:comparator {fhir:v .} } 

)
 

# A length of time
<Duration> EXTENDS @<Quantity> CLOSED {   

    a [fhir:Duration];
    fhir:nodeRole [fhir:treeRoot]?;
} AND (

# Constraint: UniqueKey:drt-1
# Human readable:There SHALL be a code if there is a value and it SHALL be an expression of time.  If system is present, it SHALL be UCUM.
# XPath:(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org')
# Constraint:code.exists() implies ((system = %ucum) and value.exists())
# ShEx:

{ fhir:code . } SHEX_Implies_SHEX (({ fhir:system { fhir:v ['%ucum'] }  }) AND { fhir:value . })

)
 

# Primitive Type canonical
<canonical> EXTENDS @<uri> CLOSED {   

    a [fhir:canonical];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type url
<url> EXTENDS @<uri> CLOSED {   

    a [fhir:url];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type base64Binary
<base64Binary> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:base64Binary];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:base64Binary?;               # Primitive value for base64Binary
}  

# Primitive Type decimal
<decimal> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:decimal];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:decimal OR xsd:double?;      # Primitive value for decimal
}  

#---------------------- Cardinality Types (OneOrMore) -------------------

<OneOrMore_Identifier> CLOSED {
    rdf:first @<Identifier>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Identifier> 
}

<OneOrMore_DeviceDefinition.udiDeviceIdentifier> CLOSED {
    rdf:first @<DeviceDefinition.udiDeviceIdentifier>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.udiDeviceIdentifier> 
}

<OneOrMore_DeviceDefinition.deviceName> CLOSED {
    rdf:first @<DeviceDefinition.deviceName>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.deviceName> 
}

<OneOrMore_DeviceDefinition.classification> CLOSED {
    rdf:first @<DeviceDefinition.classification>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.classification> 
}

<OneOrMore_RelatedArtifact> CLOSED {
    rdf:first @<RelatedArtifact>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_RelatedArtifact> 
}

<OneOrMore_DeviceDefinition.hasPart> CLOSED {
    rdf:first @<DeviceDefinition.hasPart>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.hasPart> 
}

<OneOrMore_DeviceDefinition.packaging> CLOSED {
    rdf:first @<DeviceDefinition.packaging>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.packaging> 
}

<OneOrMore_DeviceDefinition.version> CLOSED {
    rdf:first @<DeviceDefinition.version>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.version> 
}

<OneOrMore_CodeableConcept> CLOSED {
    rdf:first @<CodeableConcept>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_CodeableConcept> 
}

<OneOrMore_ProductShelfLife> CLOSED {
    rdf:first @<ProductShelfLife>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ProductShelfLife> 
}

<OneOrMore_DeviceDefinition.property> CLOSED {
    rdf:first @<DeviceDefinition.property>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.property> 
}

<OneOrMore_ContactPoint> CLOSED {
    rdf:first @<ContactPoint>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ContactPoint> 
}

<OneOrMore_DeviceDefinition.link> CLOSED {
    rdf:first @<DeviceDefinition.link>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.link> 
}

<OneOrMore_Annotation> CLOSED {
    rdf:first @<Annotation>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Annotation> 
}

<OneOrMore_DeviceDefinition.material> CLOSED {
    rdf:first @<DeviceDefinition.material>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.material> 
}

<OneOrMore_code> CLOSED {
    rdf:first @<code>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_code> 
}

<OneOrMore_DeviceDefinition.chargeItem> CLOSED {
    rdf:first @<DeviceDefinition.chargeItem>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.chargeItem> 
}

<OneOrMore_UsageContext> CLOSED {
    rdf:first @<UsageContext>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_UsageContext> 
}

<OneOrMore_CodeableReference> CLOSED {
    rdf:first @<CodeableReference>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_CodeableReference> 
}

<OneOrMore_DeviceDefinition.packaging.distributor> CLOSED {
    rdf:first @<DeviceDefinition.packaging.distributor>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.packaging.distributor> 
}

<OneOrMore_DeviceDefinition.packaging.udiDeviceIdentifier> CLOSED {
    rdf:first @<DeviceDefinition.packaging.udiDeviceIdentifier>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.packaging.udiDeviceIdentifier> 
}

<OneOrMore_Reference_Organization> CLOSED {
    rdf:first @<Reference> AND {fhir:link 
			@<Organization> } ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Reference_Organization> 
}

<OneOrMore_DeviceDefinition.udiDeviceIdentifier.marketDistribution> CLOSED {
    rdf:first @<DeviceDefinition.udiDeviceIdentifier.marketDistribution>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceDefinition.udiDeviceIdentifier.marketDistribution> 
}

<OneOrMore_Coding> CLOSED {
    rdf:first @<Coding>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Coding> 
}

#---------------------- Reference Types -------------------

#---------------------- Value Sets ------------------------

# Identifies the purpose for this identifier, if known .
fhirvs:identifier-use ["usual" "official" "temp" "secondary" "old"]

# Use of contact point.
fhirvs:contact-point-use ["home" "work" "temp" "old" "mobile"]

# This value set includes all possible codes from BCP-13 (http://tools.ietf.org/html/bcp13)
fhirvs:mimetypes EXTERNAL

# Device Production Identifier in UDI
fhirvs:device-productidentifierinudi ["lot-number" "manufactured-date" "serial-number" "expiration-date" "biological-source" "software-version"]

# The type of relationship to the related artifact.
fhirvs:related-artifact-type ["documentation" "justification" "citation" "predecessor" "successor" "derived-from" "depends-on" "composed-of" "part-of" "amends" "amended-with" "appends" "appended-with" "cites" "cited-by" "comments-on" "comment-in" "contains" "contained-in" "corrects" "correction-in" "replaces" "replaced-with" "retracts" "retracted-by" "signs" "similar-to" "supports" "supported-with" "transforms" "transformed-into" "transformed-with"]

# The type of name the device is referred by.
fhirvs:device-nametype ["registered-name" "user-friendly-name" "patient-reported-name"]

# Telecommunications form for contact point.
fhirvs:contact-point-system ["phone" "fax" "email" "pager" "url" "sms" "other"]

# Device - Corrective action scope
fhirvs:device-correctiveactionscope ["model" "lot-numbers" "serial-numbers"]

# How the Quantity should be understood and represented.
fhirvs:quantity-comparator ["<" "<=" ">=" ">" "ad"]
