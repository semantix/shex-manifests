PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>


start=@<ValueSet> AND {fhir:nodeRole [fhir:treeRoot]}


# A set of codes drawn from one or more code systems
<ValueSet> EXTENDS @<CanonicalResource> CLOSED {   

    a [fhir:ValueSet];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:url @<uri>?;                       # Canonical identifier for this 
                                            # value set, represented as a URI 
                                            # (globally unique) 
    fhir:identifier @<OneOrMore_Identifier>?;  # Additional identifier for the 
                                            # value set (business identifier) 
    fhir:version @<string>?;                # Business version of the value set
    fhir:name @<string>?;                   # Name for this value set (computer 
                                            # friendly) 
    fhir:title @<string>?;                  # Name for this value set (human 
                                            # friendly) 
    fhir:status @<code> AND
    	{fhir:value @fhirvs:publication-status};  # draft | active | retired | unknown
    fhir:experimental @<boolean>?;          # For testing purposes, not real 
                                            # usage 
    fhir:date @<dateTime>?;                 # Date last changed
    fhir:publisher @<string>?;              # Name of the publisher 
                                            # (organization or individual) 
    fhir:contact @<OneOrMore_ContactDetail>?;  # Contact details for the publisher
    fhir:description @<markdown>?;          # Natural language description of 
                                            # the value set 
    fhir:useContext @<OneOrMore_UsageContext>?;  # The context that the content is 
                                            # intended to support 
    fhir:jurisdiction @<OneOrMore_CodeableConcept>?;  # Intended jurisdiction for value 
                                            # set (if applicable) 
    fhir:immutable @<boolean>?;             # Indicates whether or not any 
                                            # change to the content logical 
                                            # definition may occur 
    fhir:purpose @<markdown>?;              # Why this value set is defined
    fhir:copyright @<markdown>?;            # Use and/or publishing restrictions
    fhir:compose @<ValueSet.compose>?;      # Content logical definition of the 
                                            # value set (CLD) 
    fhir:expansion @<ValueSet.expansion>?;  # Used when the value set is 
                                            # "expanded" 
    fhir:scope @<ValueSet.scope>?;          # Description of the semantic space 
                                            # the Value Set Expansion is 
                                            # intended to cover and should 
                                            # further clarify the text in 
                                            # ValueSet.description 
} AND (

# Constraint: UniqueKey:cnl-0
# Human readable:Name should be usable as an identifier for the module by machine processing applications such as code generation
# XPath:not(exists(f:name/@value)) or matches(f:name/@value, '[A-Z]([A-Za-z0-9_]){0,254}')
# Constraint:name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')
# ShEx:

{ fhir:name . } SHEX_Implies_SHEX { fhir:name SHEX_matches_SHEX ('[A-Z]([A-Za-z0-9_]){0,254}') }

) AND (

# Constraint: UniqueKey:vsd-2
# Human readable:A value set with concepts or filters SHALL include a system
# XPath:not(exists(f:concept) or exists(f:filter)) or exists(f:system)
# Constraint:(concept.exists() or filter.exists()) implies system.exists()
# ShEx:

({ fhir:concept . } OR { fhir:filter . }) SHEX_Implies_SHEX { fhir:system . }

) AND (

# Constraint: UniqueKey:vsd-3
# Human readable:Cannot have both concept and filter
# XPath:not(exists(f:concept)) or not(exists(f:filter))
# Constraint:concept.empty() or filter.empty()
# ShEx:

 NOT { fhir:concept {fhir:v .} }  OR  NOT { fhir:filter {fhir:v .} } 

) AND (

# Constraint: UniqueKey:vsd-1
# Human readable:A value set include/exclude SHALL have a value set or a system
# XPath:exists(f:valueSet) or exists(f:system)
# Constraint:valueSet.exists() or system.exists()
# ShEx:

{ fhir:valueSet . } OR { fhir:system . }

) AND (

# Constraint: UniqueKey:vsd-6
# Human readable:SHALL have a code or a display
# XPath:exists(f:code) or exists(f:display)
# Constraint:code.exists() or display.exists()
# ShEx:

{ fhir:code . } OR { fhir:display . }

) AND (

# Constraint: UniqueKey:vsd-9
# Human readable:Must have a code if not abstract
# XPath:exists(f:code) or (f:abstract/@value = true())
# Constraint:code.exists() or abstract = true
# ShEx:

{ fhir:code . } OR ({ fhir:abstract { fhir:v [true] }  })

) AND (

# Constraint: UniqueKey:vsd-10
# Human readable:Must have a system if a code is present
# XPath:exists(f:system) or not(exists(f:code))
# Constraint:code.empty() or system.exists()
# ShEx:

 NOT { fhir:code {fhir:v .} }  OR { fhir:system . }

)
 

# A concept defined in the system
<ValueSet.compose.include.concept> EXTENDS @<BackboneElement> CLOSED {   
    fhir:code @<code>;                      # Code or expression from system
    fhir:display @<string>?;                # Text to display for this code for 
                                            # this value set in this valueset 
    fhir:designation @<OneOrMore_ValueSet.compose.include.concept.designation>?;  # Additional representations for 
                                            # this concept 
}  

# Used when the value set is "expanded"
<ValueSet.expansion> EXTENDS @<BackboneElement> CLOSED {   
    fhir:identifier @<uri>?;                # Identifies the value set expansion 
                                            # (business identifier) 
    fhir:timestamp @<dateTime>;             # Time ValueSet expansion happened
    fhir:total @<integer>?;                 # Total number of codes in the 
                                            # expansion 
    fhir:offset @<integer>?;                # Offset at which this resource 
                                            # starts 
    fhir:parameter @<OneOrMore_ValueSet.expansion.parameter>?;  # Parameter that controlled the 
                                            # expansion process 
    fhir:property @<OneOrMore_ValueSet.expansion.property>?;  # Additional information supplied 
                                            # about each concept 
    fhir:contains @<OneOrMore_ValueSet.expansion.contains>?;  # Codes in the value set
}  

# Additional representations for this concept
<ValueSet.compose.include.concept.designation> EXTENDS @<BackboneElement> CLOSED {   
    fhir:language @<code>?;                 # Human language of the designation
    fhir:use @<Coding>?;                    # Types of uses of designations
    fhir:value @<string>;                   # The text value for this designation
}  

# Include one or more codes from a code system or other value set(s)
<ValueSet.compose.include> EXTENDS @<BackboneElement> CLOSED {   
    fhir:system @<uri>?;                    # The system the codes come from
    fhir:version @<string>?;                # Specific version of the code 
                                            # system referred to 
    fhir:concept @<OneOrMore_ValueSet.compose.include.concept>?;  # A concept defined in the system
    fhir:filter @<OneOrMore_ValueSet.compose.include.filter>?;  # Select codes/concepts by their 
                                            # properties (including 
                                            # relationships) 
    fhir:valueSet @<OneOrMore_canonical>?;  # Select the contents included in 
                                            # this value set 
    fhir:copyright @<string>?;              # A copyright statement for the 
                                            # specific code system included in 
                                            # the value set 
}  

# Description of the semantic space the Value Set Expansion is intended to cover and should further clarify the text in ValueSet.description
<ValueSet.scope> EXTENDS @<BackboneElement> CLOSED {   
    fhir:inclusionCriteria @<string>?;      # Criteria describing which concepts 
                                            # or codes should be included and 
                                            # why 
    fhir:exclusionCriteria @<string>?;      # Criteria describing which concepts 
                                            # or codes should be excluded and 
                                            # why 
}  

# Additional information supplied about each concept
<ValueSet.expansion.property> EXTENDS @<BackboneElement> CLOSED {   
    fhir:code @<code>;                      # Identifies the property on the 
                                            # concepts, and when referred to in 
                                            # operations 
    fhir:uri @<uri>?;                       # Formal identifier for the property
}  

# Codes in the value set
<ValueSet.expansion.contains> EXTENDS @<BackboneElement> CLOSED {   
    fhir:system @<uri>?;                    # System value for the code
    fhir:abstract @<boolean>?;              # If user cannot select this entry
    fhir:inactive @<boolean>?;              # If concept is inactive in the code 
                                            # system 
    fhir:version @<string>?;                # Version in which this code/display 
                                            # is defined 
    fhir:code @<code>?;                     # Code - if blank, this is not a 
                                            # selectable code 
    fhir:display @<string>?;                # User display for the concept
    fhir:designation @<OneOrMore_ValueSet.compose.include.concept.designation>?;  # Additional representations for 
                                            # this item 
    fhir:property @<OneOrMore_ValueSet.expansion.contains.property>?;  # Property value for the concept
    fhir:contains @<OneOrMore_ValueSet.expansion.contains>?;  # Codes contained under this entry
}  

# Codes contained under this entry
<ValueSet.expansion.contains.contains> CLOSED {   
}  

# Property value for the concept
<ValueSet.expansion.contains.property> EXTENDS @<BackboneElement> CLOSED {   
    fhir:code @<code>;                      # Reference to 
                                            # ValueSet.expansion.property.code 
    fhir:value (@<code>  OR 
    			@<Coding>  OR 
    			@<string>  OR 
    			@<integer>  OR 
    			@<boolean>  OR 
    			@<dateTime>  OR 
    			@<decimal> )  AND { rdf:type IRI } ;  # Value of the property for this 
                                            # concept 
}  

# Parameter that controlled the expansion process
<ValueSet.expansion.parameter> EXTENDS @<BackboneElement> CLOSED {   
    fhir:name @<string>;                    # Name as assigned by the client or 
                                            # server 
    fhir:value (@<string>  OR 
    			@<boolean>  OR 
    			@<integer>  OR 
    			@<decimal>  OR 
    			@<uri>  OR 
    			@<code>  OR 
    			@<dateTime> )  AND { rdf:type IRI } ?;  # Value of the named parameter
}  

# Content logical definition of the value set (CLD)
<ValueSet.compose> EXTENDS @<BackboneElement> CLOSED {   
    fhir:lockedDate @<date>?;               # Fixed date for references with no 
                                            # specified version (transitive) 
    fhir:inactive @<boolean>?;              # Whether inactive codes are in the 
                                            # value set 
    fhir:include @<OneOrMore_ValueSet.compose.include>;  # Include one or more codes from a 
                                            # code system or other value set(s) 
    fhir:exclude @<OneOrMore_ValueSet.compose.include>?;  # Explicitly exclude codes from a 
                                            # code system or other value sets 
    fhir:property @<OneOrMore_string>?;     # Property to return if client 
                                            # doesn't override 
}  

# Select codes/concepts by their properties (including relationships)
<ValueSet.compose.include.filter> EXTENDS @<BackboneElement> CLOSED {   
    fhir:property @<code>;                  # A property/filter defined by the 
                                            # code system 
    fhir:op @<code> AND
    	{fhir:value @fhirvs:filter-operator};  # = | is-a | descendent-of | 
                                            # is-not-a | regex | in | not-in | 
                                            # generalizes | child-of | 
                                            # descendent-leaf | exists 
    fhir:value @<string>;                   # Code from the system, or regex 
                                            # criteria, or boolean value for 
                                            # exists 
}  

#---------------------- Data Types -------------------

# Primitive Type dateTime
<dateTime> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:dateTime];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime?;  # Primitive value for dateTime
}  

# Primitive Type date
<date> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:date];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:gYear OR xsd:gYearMonth OR xsd:date?;  # Primitive value for date
}  

# Primitive Type code
<code> EXTENDS @<string> CLOSED {   

    a [fhir:code];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type string
<string> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:string];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:string MAXLENGTH 1048576?;   # Primitive value for string
}  

# Primitive Type integer
<integer> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:integer];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:int MININCLUSIVE -2147483648 MAXINCLUSIVE 2147483647?;  # Primitive value for integer
}  

# Primitive Type canonical
<canonical> EXTENDS @<uri> CLOSED {   

    a [fhir:canonical];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type uri
<uri> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:uri];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:anyURI?;                     # Primitive value for uri
}  

# Contact information
<ContactDetail> EXTENDS @<DataType> CLOSED {   

    a [fhir:ContactDetail];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:name @<string>?;                   # Name of an individual to contact
    fhir:telecom @<OneOrMore_ContactPoint>?;  # Contact details for individual or 
                                            # organization 
}  

# An identifier intended for computation
<Identifier> EXTENDS @<DataType> CLOSED {   

    a [fhir:Identifier];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:use @<code> AND
    	{fhir:value @fhirvs:identifier-use}?;  # usual | official | temp | 
                                            # secondary | old (If known) 
    fhir:type @<CodeableConcept>?;          # Description of identifier
    fhir:system @<uri>?;                    # The namespace for the identifier 
                                            # value 
    fhir:value @<string>?;                  # The value that is unique
    fhir:period @<Period>?;                 # Time period when id is/was valid 
                                            # for use 
    fhir:assigner @<Reference> AND {fhir:link 
    			@<Organization> }?;  # Organization that issued id (may 
                                            # be just text) 
}  

# Primitive Type boolean
<boolean> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:boolean];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:boolean?;                    # Primitive value for boolean
}  

# Describes the context of use for a conformance or knowledge resource
<UsageContext> EXTENDS @<DataType> CLOSED {   

    a [fhir:UsageContext];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:code @<Coding>;                    # Type of context being specified
    fhir:value (@<CodeableConcept>  OR 
    			@<Quantity>  OR 
    			@<Range>  OR 
    			(@<Reference>  AND {fhir:link @<PlanDefinition> OR 
    			 @<ResearchStudy> OR 
    			 @<InsurancePlan> OR 
    			 @<HealthcareService> OR 
    			 @<Group> OR 
    			 @<Location> OR 
    			 @<Organization> }) )  AND { rdf:type IRI } ;  # Value that defines the context
}  

# A reference to a code defined by a terminology system
<Coding> EXTENDS @<DataType> CLOSED {   

    a [fhir:Coding];
    fhir:nodeRole [fhir:treeRoot]?;
    a NONLITERAL?;
    fhir:system @<uri>?;                    # Identity of the terminology system
    fhir:version @<string>?;                # Version of the system - if relevant
    fhir:code @<code>?;                     # Symbol in syntax defined by the 
                                            # system 
    fhir:display @<string>?;                # Representation defined by the 
                                            # system 
    fhir:userSelected @<boolean>?;          # If this coding was chosen directly 
                                            # by the user 
}  

# Primitive Type markdown
<markdown> EXTENDS @<string> CLOSED {   

    a [fhir:markdown];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type decimal
<decimal> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:decimal];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:decimal OR xsd:double?;      # Primitive value for decimal
}  

# Concept - reference to a terminology or just  text
<CodeableConcept> EXTENDS @<DataType> CLOSED {   

    a [fhir:CodeableConcept];
    fhir:nodeRole [fhir:treeRoot]?;
    a NONLITERAL*;
    fhir:coding @<OneOrMore_Coding>?;       # Code defined by a terminology 
                                            # system 
    fhir:text @<string>?;                   # Plain text representation of the 
                                            # concept 
}  

# A reference from one resource to another
<Reference> EXTENDS @<DataType> CLOSED {   

    a [fhir:Reference];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:link IRI?;
    fhir:reference @<string>?;              # Literal reference, Relative, 
                                            # internal or absolute URL 
    fhir:type @<uri>?;                      # Type the reference refers to (e.g. 
                                            # "Patient") 
    fhir:identifier @<Identifier>?;         # Logical reference, when literal 
                                            # reference is not known 
    fhir:display @<string>?;                # Text alternative for the resource
} AND (

# Constraint: UniqueKey:ref-1
# Human readable:SHALL have a contained resource if a local reference is provided
# XPath:not(starts-with(f:reference/@value, '#')) or exists(ancestor::*[self::f:entry or self::f:parameter]/f:resource/f:*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')]|/*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')])
# Constraint:reference.startsWith('#').not() or (reference.substring(1).trace('url') in %rootResource.contained.id.trace('ids')) or (reference='#' and %rootResource!=%resource)
# ShEx:

 NOT { fhir:reference  SHEX_startsWith_SHEX ('#') } OR ({ fhir:reference SHEX_substring_SHEX (1) SHEX_trace_SHEX ('url') } { fhir:v ['%rootResource'.contained.id SHEX_trace_SHEX ('ids')] } ) OR (({ fhir:reference { fhir:v ['#'] }  }) AND ('%rootResource' { fhir:v [ . -'%resource'] }))

)
 

# Time range defined by start and end date/time
<Period> EXTENDS @<DataType> CLOSED {   

    a [fhir:Period];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:start @<dateTime>?;                # Starting time with inclusive 
                                            # boundary 
    fhir:end @<dateTime>?;                  # End time with inclusive boundary, 
                                            # if not ongoing 
} AND (

# Constraint: UniqueKey:per-1
# Human readable:If present, start SHALL have a lower or equal value than end
# XPath:not(exists(f:start/@value)) or not(exists(f:end/@value)) or (xs:dateTime(f:start/@value) <= xs:dateTime(f:end/@value))
# Constraint:start.hasValue().not() or end.hasValue().not() or (start <= end)
# ShEx:

 NOT { fhir:start  . } OR  NOT { fhir:end  . } OR ({ fhir:start { fhir:v MaxInclusive { fhir:end } }  })

)
 

# A measured or measurable amount
<Quantity> EXTENDS @<DataType> CLOSED {   

    a [fhir:Quantity];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:value @<decimal>?;                 # Numerical value (with implicit 
                                            # precision) 
    fhir:comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > | ad - how to 
                                            # understand the value 
    fhir:unit @<string>?;                   # Unit representation
    fhir:system @<uri>?;                    # System that defines coded unit form
    fhir:code @<code>?;                     # Coded form of the unit
} AND (

# Constraint: UniqueKey:qty-3
# Human readable:If a code for the unit is present, the system SHALL also be present
# XPath:not(exists(f:code)) or exists(f:system)
# Constraint:code.empty() or system.exists()
# ShEx:

 NOT { fhir:code {fhir:v .} }  OR { fhir:system . }

)
 

# Set of values bounded by low and high
<Range> EXTENDS @<DataType> CLOSED {   

    a [fhir:Range];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:low @<SimpleQuantity>?;            # Low limit
    fhir:high @<SimpleQuantity>?;           # High limit
} AND (

# Constraint: UniqueKey:rng-2
# Human readable:If present, low SHALL have a lower value than high
# XPath:not(exists(f:low/f:value/@value)) or not(exists(f:high/f:value/@value)) or (number(f:low/f:value/@value) <= number(f:high/f:value/@value))
# Constraint:low.value.empty() or high.value.empty() or (low <= high)
# ShEx:

 NOT { fhir:low fhir:value {fhir:v .} }  OR  NOT { fhir:high fhir:value {fhir:v .} }  OR ({ fhir:low { fhir:v MaxInclusive { fhir:high } }  })

)
 

# Details of a Technology mediated contact point (phone, fax, email, etc.)
<ContactPoint> EXTENDS @<DataType> CLOSED {   

    a [fhir:ContactPoint];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:system @<code> AND
    	{fhir:value @fhirvs:contact-point-system}?;  # phone | fax | email | pager | url 
                                            # | sms | other 
    fhir:value @<string>?;                  # The actual contact point details
    fhir:use @<code> AND
    	{fhir:value @fhirvs:contact-point-use}?;  # home | work | temp | old | mobile 
                                            # - purpose of this contact point 
    fhir:rank @<positiveInt>?;              # Specify preferred order of use (1 
                                            # = highest) 
    fhir:period @<Period>?;                 # Time period when the contact point 
                                            # was/is in use 
} AND (

# Constraint: UniqueKey:cpt-2
# Human readable:A system is required if a value is provided.
# XPath:not(exists(f:value)) or exists(f:system)
# Constraint:value.empty() or system.exists()
# ShEx:

 NOT { fhir:value {fhir:v .} }  OR { fhir:system . }

)
 

# A fixed quantity (no comparator)
<SimpleQuantity> EXTENDS @<Quantity> CLOSED {   

    a [fhir:SimpleQuantity];
    fhir:nodeRole [fhir:treeRoot]?;
} AND (

# Constraint: UniqueKey:sqty-1
# Human readable:The comparator is not used on a SimpleQuantity
# XPath:not(exists(f:comparator))
# Constraint:comparator.empty()
# ShEx:

 NOT { fhir:comparator {fhir:v .} } 

)
 

# Primitive Type positiveInt
<positiveInt> EXTENDS @<integer> CLOSED {   

    a [fhir:positiveInt];
    fhir:nodeRole [fhir:treeRoot]?;
}  

#---------------------- Cardinality Types (OneOrMore) -------------------

<OneOrMore_Identifier> CLOSED {
    rdf:first @<Identifier>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Identifier> 
}

<OneOrMore_ContactDetail> CLOSED {
    rdf:first @<ContactDetail>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ContactDetail> 
}

<OneOrMore_UsageContext> CLOSED {
    rdf:first @<UsageContext>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_UsageContext> 
}

<OneOrMore_CodeableConcept> CLOSED {
    rdf:first @<CodeableConcept>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_CodeableConcept> 
}

<OneOrMore_ValueSet.compose.include.concept.designation> CLOSED {
    rdf:first @<ValueSet.compose.include.concept.designation>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.compose.include.concept.designation> 
}

<OneOrMore_ValueSet.expansion.parameter> CLOSED {
    rdf:first @<ValueSet.expansion.parameter>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.expansion.parameter> 
}

<OneOrMore_ValueSet.expansion.property> CLOSED {
    rdf:first @<ValueSet.expansion.property>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.expansion.property> 
}

<OneOrMore_ValueSet.expansion.contains> CLOSED {
    rdf:first @<ValueSet.expansion.contains>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.expansion.contains> 
}

<OneOrMore_ValueSet.compose.include.concept> CLOSED {
    rdf:first @<ValueSet.compose.include.concept>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.compose.include.concept> 
}

<OneOrMore_ValueSet.compose.include.filter> CLOSED {
    rdf:first @<ValueSet.compose.include.filter>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.compose.include.filter> 
}

<OneOrMore_canonical> CLOSED {
    rdf:first @<canonical>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_canonical> 
}

<OneOrMore_ValueSet.expansion.contains.property> CLOSED {
    rdf:first @<ValueSet.expansion.contains.property>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.expansion.contains.property> 
}

<OneOrMore_ValueSet.compose.include> CLOSED {
    rdf:first @<ValueSet.compose.include>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ValueSet.compose.include> 
}

<OneOrMore_string> CLOSED {
    rdf:first @<string>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_string> 
}

<OneOrMore_ContactPoint> CLOSED {
    rdf:first @<ContactPoint>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ContactPoint> 
}

<OneOrMore_Coding> CLOSED {
    rdf:first @<Coding>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Coding> 
}

#---------------------- Reference Types -------------------

#---------------------- Value Sets ------------------------

# Identifies the purpose for this identifier, if known .
fhirvs:identifier-use ["usual" "official" "temp" "secondary" "old"]

# The lifecycle status of an artifact.
fhirvs:publication-status ["draft" "active" "retired" "unknown"]

# The kind of operation to perform as a part of a property based filter.
fhirvs:filter-operator ["=" "is-a" "descendent-of" "is-not-a" "regex" "in" "not-in" "generalizes" "child-of" "descendent-leaf" "exists"]

# Use of contact point.
fhirvs:contact-point-use ["home" "work" "temp" "old" "mobile"]

# Telecommunications form for contact point.
fhirvs:contact-point-system ["phone" "fax" "email" "pager" "url" "sms" "other"]

# How the Quantity should be understood and represented.
fhirvs:quantity-comparator ["<" "<=" ">=" ">" "ad"]
