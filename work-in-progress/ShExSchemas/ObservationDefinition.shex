PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>


start=@<ObservationDefinition> AND {fhir:nodeRole [fhir:treeRoot]}


# Definition of an observation
<ObservationDefinition> EXTENDS @<DomainResource> CLOSED {   

    a [fhir:ObservationDefinition];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:url @<uri>?;                       # Logical canonical URL to reference 
                                            # this ObservationDefinition 
                                            # (globally unique) 
    fhir:identifier @<Identifier>?;         # Business identifier of the 
                                            # ObservationDefinition 
    fhir:version @<string>?;                # Business version of the 
                                            # ObservationDefinition 
    fhir:name @<string>?;                   # Name for this 
                                            # ObservationDefinition (computer 
                                            # friendly) 
    fhir:title @<string>?;                  # Name for this 
                                            # ObservationDefinition (human 
                                            # friendly) 
    fhir:status @<code> AND
    	{fhir:value @fhirvs:publication-status};  # draft | active | retired | unknown
    fhir:experimental @<boolean>?;          # If for testing purposes, not real 
                                            # usage 
    fhir:date @<dateTime>?;                 # Date last changed
    fhir:publisher @<Reference> AND {fhir:link 
    			@<Organization> OR 
    			@<Practitioner> OR 
    			@<PractitionerRole> }?;  # The name of the individual or 
                                            # organization that published the 
                                            # ObservationDefinition 
    fhir:contact @<OneOrMore_ContactDetail>?;  # Contact details for the publisher
    fhir:description @<markdown>?;          # Natural language description of 
                                            # the ObservationDefinition 
    fhir:useContext @<OneOrMore_UsageContext>?;  # Content intends to support these 
                                            # contexts 
    fhir:jurisdiction @<OneOrMore_CodeableConcept>?;  # Intended jurisdiction for this 
                                            # ObservationDefinition (if 
                                            # applicable) 
    fhir:purpose @<markdown>?;              # Why this ObservationDefinition is 
                                            # defined 
    fhir:copyright @<markdown>?;            # Use and/or publishing restrictions
    fhir:approvalDate @<date>?;             # When ObservationDefinition was 
                                            # approved by publisher 
    fhir:lastReviewDate @<date>?;           # Date on which the asset content 
                                            # was last reviewed 
    fhir:effectivePeriod @<Period>?;        # The effective date range for the 
                                            # ObservationDefinition 
    fhir:derivedFromCanonical @<OneOrMore_canonical>?;  # Based on FHIR definition of 
                                            # another observation 
    fhir:derivedFromUri @<OneOrMore_uri>?;  # Based on external definition
    fhir:subject @<OneOrMore_CodeableConcept>?;  # Type of subject for the defined 
                                            # observation 
    fhir:performerType @<CodeableConcept>?;  # Desired kind of performer for such 
                                            # kind of observation 
    fhir:category @<OneOrMore_CodeableConcept>?;  # General type of observation
    fhir:code @<CodeableConcept>;           # Type of observation
    fhir:permittedDataType @<OneOrMore_code> AND
    	{fhir:value @fhirvs:permitted-data-type}?;  # Quantity | CodeableConcept | 
                                            # string | boolean | integer | Range 
                                            # | Ratio | SampledData | time | 
                                            # dateTime | Period 
    fhir:multipleResultsAllowed @<boolean>?;  # Multiple results allowed for 
                                            # conforming observations 
    fhir:bodySite @<CodeableConcept>?;      # Body part to be observed
    fhir:method @<CodeableConcept>?;        # Method used to produce the 
                                            # observation 
    fhir:specimen @<OneOrMore_Reference_SpecimenDefinition>?;  # Kind of specimen used by this type 
                                            # of observation 
    fhir:device @<OneOrMore_Reference_Device_OR_DeviceDefinition>?;  # Measurement device or model of 
                                            # device 
    fhir:preferredReportName @<string>?;    # The preferred name to be used when 
                                            # reporting the observation results 
    fhir:quantitativeDetails @<ObservationDefinition.quantitativeDetails>?;  # Characteristics of quantitative 
                                            # results 
    fhir:qualifiedValue @<OneOrMore_ObservationDefinition.qualifiedValue>?;  # Set of qualified values for 
                                            # observation results 
    fhir:hasMember @<OneOrMore_Reference_ObservationDefinition_OR_Questionnaire>?;  # Definitions of related resources 
                                            # belonging to this kind of 
                                            # observation group 
    fhir:component @<OneOrMore_ObservationDefinition.component>?;  # Component results
} AND (

# Constraint: UniqueKey:cnl-0
# Human readable:Name should be usable as an identifier for the module by machine processing applications such as code generation
# XPath:not(exists(f:name/@value)) or matches(f:name/@value, '[A-Z]([A-Za-z0-9_]){0,254}')
# Constraint:name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')
# ShEx:

{ fhir:name . } SHEX_Implies_SHEX { fhir:name SHEX_matches_SHEX ('[A-Z]([A-Za-z0-9_]){0,254}') }

)
 

# Characteristics of quantitative results
<ObservationDefinition.quantitativeDetails> EXTENDS @<BackboneElement> CLOSED {   
    fhir:unit @<CodeableConcept>?;          # Primary unit for quantitative 
                                            # results 
    fhir:customaryUnit @<CodeableConcept>?;  # Customary (secondary) unit for 
                                            # quantitative results 
    fhir:conversionFactor @<decimal>?;      # Primary to secondary unit 
                                            # conversion factor 
    fhir:decimalPrecision @<integer>?;      # Decimal precision of observation 
                                            # quantitative results 
}  

# Component results
<ObservationDefinition.component> EXTENDS @<BackboneElement> CLOSED {   
    fhir:code @<CodeableConcept>;           # Type of observation
    fhir:permittedDataType @<OneOrMore_code> AND
    	{fhir:value @fhirvs:permitted-data-type}?;  # Quantity | CodeableConcept | 
                                            # string | boolean | integer | Range 
                                            # | Ratio | SampledData | time | 
                                            # dateTime | Period 
    fhir:quantitativeDetails @<ObservationDefinition.quantitativeDetails>?;  # Characteristics of quantitative 
                                            # results 
    fhir:qualifiedValue @<OneOrMore_ObservationDefinition.qualifiedValue>?;  # Set of qualified values for 
                                            # observation results 
}  

# Set of qualified values for observation results
<ObservationDefinition.qualifiedValue> EXTENDS @<BackboneElement> CLOSED {   
    fhir:context @<CodeableConcept>?;       # Context qualifier for the set of 
                                            # qualified values 
    fhir:appliesTo @<OneOrMore_CodeableConcept>?;  # Targetted population for the set 
                                            # of qualified values 
    fhir:gender @<code> AND
    	{fhir:value @fhirvs:administrative-gender}?;  # male | female | other | unknown
    fhir:age @<Range>?;                     # Applicable age range for the set 
                                            # of qualified values 
    fhir:gestationalAge @<Range>?;          # Applicable gestational age range 
                                            # for the set of qualified values 
    fhir:condition @<string>?;              # Condition associated with the set 
                                            # of qualified values 
    fhir:rangeCategory @<code> AND
    	{fhir:value @fhirvs:observation-range-category}?;  # reference | critical | absolute
    fhir:range @<Range>?;                   # The range for continuous or 
                                            # ordinal observations 
    fhir:validCodedValueSet @<canonical>?;  # Value set of valid coded values as 
                                            # part of this set of qualified 
                                            # values 
    fhir:normalCodedValueSet @<canonical>?;  # Value set of normal coded values 
                                            # as part of this set of qualified 
                                            # values 
    fhir:abnormalCodedValueSet @<canonical>?;  # Value set of abnormal coded values 
                                            # as part of this set of qualified 
                                            # values 
    fhir:criticalCodedValueSet @<canonical>?;  # Value set of critical coded values 
                                            # as part of this set of qualified 
                                            # values 
}  

#---------------------- Data Types -------------------

# Primitive Type dateTime
<dateTime> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:dateTime];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime?;  # Primitive value for dateTime
}  

# Primitive Type date
<date> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:date];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:gYear OR xsd:gYearMonth OR xsd:date?;  # Primitive value for date
}  

# Primitive Type code
<code> EXTENDS @<string> CLOSED {   

    a [fhir:code];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type string
<string> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:string];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:string MAXLENGTH 1048576?;   # Primitive value for string
}  

# A reference from one resource to another
<Reference> EXTENDS @<DataType> CLOSED {   

    a [fhir:Reference];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:link IRI?;
    fhir:reference @<string>?;              # Literal reference, Relative, 
                                            # internal or absolute URL 
    fhir:type @<uri>?;                      # Type the reference refers to (e.g. 
                                            # "Patient") 
    fhir:identifier @<Identifier>?;         # Logical reference, when literal 
                                            # reference is not known 
    fhir:display @<string>?;                # Text alternative for the resource
} AND (

# Constraint: UniqueKey:ref-1
# Human readable:SHALL have a contained resource if a local reference is provided
# XPath:not(starts-with(f:reference/@value, '#')) or exists(ancestor::*[self::f:entry or self::f:parameter]/f:resource/f:*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')]|/*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')])
# Constraint:reference.startsWith('#').not() or (reference.substring(1).trace('url') in %rootResource.contained.id.trace('ids')) or (reference='#' and %rootResource!=%resource)
# ShEx:

 NOT { fhir:reference  SHEX_startsWith_SHEX ('#') } OR ({ fhir:reference SHEX_substring_SHEX (1) SHEX_trace_SHEX ('url') } { fhir:v ['%rootResource'.contained.id SHEX_trace_SHEX ('ids')] } ) OR (({ fhir:reference { fhir:v ['#'] }  }) AND ('%rootResource' { fhir:v [ . -'%resource'] }))

)
 

# Time range defined by start and end date/time
<Period> EXTENDS @<DataType> CLOSED {   

    a [fhir:Period];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:start @<dateTime>?;                # Starting time with inclusive 
                                            # boundary 
    fhir:end @<dateTime>?;                  # End time with inclusive boundary, 
                                            # if not ongoing 
} AND (

# Constraint: UniqueKey:per-1
# Human readable:If present, start SHALL have a lower or equal value than end
# XPath:not(exists(f:start/@value)) or not(exists(f:end/@value)) or (xs:dateTime(f:start/@value) <= xs:dateTime(f:end/@value))
# Constraint:start.hasValue().not() or end.hasValue().not() or (start <= end)
# ShEx:

 NOT { fhir:start  . } OR  NOT { fhir:end  . } OR ({ fhir:start { fhir:v MaxInclusive { fhir:end } }  })

)
 

# Primitive Type canonical
<canonical> EXTENDS @<uri> CLOSED {   

    a [fhir:canonical];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type integer
<integer> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:integer];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:int MININCLUSIVE -2147483648 MAXINCLUSIVE 2147483647?;  # Primitive value for integer
}  

# Set of values bounded by low and high
<Range> EXTENDS @<DataType> CLOSED {   

    a [fhir:Range];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:low @<SimpleQuantity>?;            # Low limit
    fhir:high @<SimpleQuantity>?;           # High limit
} AND (

# Constraint: UniqueKey:rng-2
# Human readable:If present, low SHALL have a lower value than high
# XPath:not(exists(f:low/f:value/@value)) or not(exists(f:high/f:value/@value)) or (number(f:low/f:value/@value) <= number(f:high/f:value/@value))
# Constraint:low.value.empty() or high.value.empty() or (low <= high)
# ShEx:

 NOT { fhir:low fhir:value {fhir:v .} }  OR  NOT { fhir:high fhir:value {fhir:v .} }  OR ({ fhir:low { fhir:v MaxInclusive { fhir:high } }  })

)
 

# Primitive Type uri
<uri> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:uri];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:anyURI?;                     # Primitive value for uri
}  

# Contact information
<ContactDetail> EXTENDS @<DataType> CLOSED {   

    a [fhir:ContactDetail];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:name @<string>?;                   # Name of an individual to contact
    fhir:telecom @<OneOrMore_ContactPoint>?;  # Contact details for individual or 
                                            # organization 
}  

# An identifier intended for computation
<Identifier> EXTENDS @<DataType> CLOSED {   

    a [fhir:Identifier];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:use @<code> AND
    	{fhir:value @fhirvs:identifier-use}?;  # usual | official | temp | 
                                            # secondary | old (If known) 
    fhir:type @<CodeableConcept>?;          # Description of identifier
    fhir:system @<uri>?;                    # The namespace for the identifier 
                                            # value 
    fhir:value @<string>?;                  # The value that is unique
    fhir:period @<Period>?;                 # Time period when id is/was valid 
                                            # for use 
    fhir:assigner @<Reference> AND {fhir:link 
    			@<Organization> }?;  # Organization that issued id (may 
                                            # be just text) 
}  

# Primitive Type boolean
<boolean> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:boolean];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:boolean?;                    # Primitive value for boolean
}  

# Describes the context of use for a conformance or knowledge resource
<UsageContext> EXTENDS @<DataType> CLOSED {   

    a [fhir:UsageContext];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:code @<Coding>;                    # Type of context being specified
    fhir:value (@<CodeableConcept>  OR 
    			@<Quantity>  OR 
    			@<Range>  OR 
    			(@<Reference>  AND {fhir:link @<PlanDefinition> OR 
    			 @<ResearchStudy> OR 
    			 @<InsurancePlan> OR 
    			 @<HealthcareService> OR 
    			 @<Group> OR 
    			 @<Location> OR 
    			 @<Organization> }) )  AND { rdf:type IRI } ;  # Value that defines the context
}  

# Primitive Type markdown
<markdown> EXTENDS @<string> CLOSED {   

    a [fhir:markdown];
    fhir:nodeRole [fhir:treeRoot]?;
}  

# Primitive Type decimal
<decimal> EXTENDS @<PrimitiveType> CLOSED {   

    a [fhir:decimal];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:v xsd:decimal OR xsd:double?;      # Primitive value for decimal
}  

# Concept - reference to a terminology or just  text
<CodeableConcept> EXTENDS @<DataType> CLOSED {   

    a [fhir:CodeableConcept];
    fhir:nodeRole [fhir:treeRoot]?;
    a NONLITERAL*;
    fhir:coding @<OneOrMore_Coding>?;       # Code defined by a terminology 
                                            # system 
    fhir:text @<string>?;                   # Plain text representation of the 
                                            # concept 
}  

# A fixed quantity (no comparator)
<SimpleQuantity> EXTENDS @<Quantity> CLOSED {   

    a [fhir:SimpleQuantity];
    fhir:nodeRole [fhir:treeRoot]?;
} AND (

# Constraint: UniqueKey:sqty-1
# Human readable:The comparator is not used on a SimpleQuantity
# XPath:not(exists(f:comparator))
# Constraint:comparator.empty()
# ShEx:

 NOT { fhir:comparator {fhir:v .} } 

)
 

# A measured or measurable amount
<Quantity> EXTENDS @<DataType> CLOSED {   

    a [fhir:Quantity];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:value @<decimal>?;                 # Numerical value (with implicit 
                                            # precision) 
    fhir:comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > | ad - how to 
                                            # understand the value 
    fhir:unit @<string>?;                   # Unit representation
    fhir:system @<uri>?;                    # System that defines coded unit form
    fhir:code @<code>?;                     # Coded form of the unit
} AND (

# Constraint: UniqueKey:qty-3
# Human readable:If a code for the unit is present, the system SHALL also be present
# XPath:not(exists(f:code)) or exists(f:system)
# Constraint:code.empty() or system.exists()
# ShEx:

 NOT { fhir:code {fhir:v .} }  OR { fhir:system . }

)
 

# Details of a Technology mediated contact point (phone, fax, email, etc.)
<ContactPoint> EXTENDS @<DataType> CLOSED {   

    a [fhir:ContactPoint];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:system @<code> AND
    	{fhir:value @fhirvs:contact-point-system}?;  # phone | fax | email | pager | url 
                                            # | sms | other 
    fhir:value @<string>?;                  # The actual contact point details
    fhir:use @<code> AND
    	{fhir:value @fhirvs:contact-point-use}?;  # home | work | temp | old | mobile 
                                            # - purpose of this contact point 
    fhir:rank @<positiveInt>?;              # Specify preferred order of use (1 
                                            # = highest) 
    fhir:period @<Period>?;                 # Time period when the contact point 
                                            # was/is in use 
} AND (

# Constraint: UniqueKey:cpt-2
# Human readable:A system is required if a value is provided.
# XPath:not(exists(f:value)) or exists(f:system)
# Constraint:value.empty() or system.exists()
# ShEx:

 NOT { fhir:value {fhir:v .} }  OR { fhir:system . }

)
 

# A reference to a code defined by a terminology system
<Coding> EXTENDS @<DataType> CLOSED {   

    a [fhir:Coding];
    fhir:nodeRole [fhir:treeRoot]?;
    a NONLITERAL?;
    fhir:system @<uri>?;                    # Identity of the terminology system
    fhir:version @<string>?;                # Version of the system - if relevant
    fhir:code @<code>?;                     # Symbol in syntax defined by the 
                                            # system 
    fhir:display @<string>?;                # Representation defined by the 
                                            # system 
    fhir:userSelected @<boolean>?;          # If this coding was chosen directly 
                                            # by the user 
}  

# Primitive Type positiveInt
<positiveInt> EXTENDS @<integer> CLOSED {   

    a [fhir:positiveInt];
    fhir:nodeRole [fhir:treeRoot]?;
}  

#---------------------- Cardinality Types (OneOrMore) -------------------

<OneOrMore_ContactDetail> CLOSED {
    rdf:first @<ContactDetail>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ContactDetail> 
}

<OneOrMore_UsageContext> CLOSED {
    rdf:first @<UsageContext>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_UsageContext> 
}

<OneOrMore_CodeableConcept> CLOSED {
    rdf:first @<CodeableConcept>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_CodeableConcept> 
}

<OneOrMore_canonical> CLOSED {
    rdf:first @<canonical>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_canonical> 
}

<OneOrMore_uri> CLOSED {
    rdf:first @<uri>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_uri> 
}

<OneOrMore_code> CLOSED {
    rdf:first @<code>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_code> 
}

<OneOrMore_Reference_SpecimenDefinition> CLOSED {
    rdf:first @<Reference> AND {fhir:link 
			@<SpecimenDefinition> } ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Reference_SpecimenDefinition> 
}

<OneOrMore_Reference_Device_OR_DeviceDefinition> CLOSED {
    rdf:first @<Reference> AND {fhir:link 
			@<Device> OR 
			@<DeviceDefinition> } ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Reference_Device_OR_DeviceDefinition> 
}

<OneOrMore_ObservationDefinition.qualifiedValue> CLOSED {
    rdf:first @<ObservationDefinition.qualifiedValue>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ObservationDefinition.qualifiedValue> 
}

<OneOrMore_Reference_ObservationDefinition_OR_Questionnaire> CLOSED {
    rdf:first @<Reference> AND {fhir:link 
			@<ObservationDefinition> OR 
			@<Questionnaire> } ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Reference_ObservationDefinition_OR_Questionnaire> 
}

<OneOrMore_ObservationDefinition.component> CLOSED {
    rdf:first @<ObservationDefinition.component>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ObservationDefinition.component> 
}

<OneOrMore_ContactPoint> CLOSED {
    rdf:first @<ContactPoint>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ContactPoint> 
}

<OneOrMore_Coding> CLOSED {
    rdf:first @<Coding>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Coding> 
}

#---------------------- Reference Types -------------------

#---------------------- Value Sets ------------------------

# Identifies the purpose for this identifier, if known .
fhirvs:identifier-use ["usual" "official" "temp" "secondary" "old"]

# The lifecycle status of an artifact.
fhirvs:publication-status ["draft" "active" "retired" "unknown"]

# Use of contact point.
fhirvs:contact-point-use ["home" "work" "temp" "old" "mobile"]

# Codes identifying the category of observation range.
fhirvs:observation-range-category ["reference" "critical" "absolute"]

# Permitted data type for observation value.
fhirvs:permitted-data-type ["Quantity" "CodeableConcept" "string" "boolean" "integer" "Range" "Ratio" "SampledData" "time" "dateTime" "Period"]

# Telecommunications form for contact point.
fhirvs:contact-point-system ["phone" "fax" "email" "pager" "url" "sms" "other"]

# The gender of a person used for administrative purposes.
fhirvs:administrative-gender ["male" "female" "other" "unknown"]

# How the Quantity should be understood and represented.
fhirvs:quantity-comparator ["<" "<=" ">=" ">" "ad"]
