PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>


start=@<VerificationResult> AND {fhir:nodeRole [fhir:treeRoot]}


# Describes validation requirements, source(s), status and dates for one or more elements
<VerificationResult> EXTENDS @<DomainResource> CLOSED {   

    a [fhir:VerificationResult];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:target @<OneOrMore_VerificationResult.target_Resource>?;  # A resource that was validated
    fhir:targetLocation @<OneOrMore_VerificationResult.targetLocation>?;  # The fhirpath location(s) within 
                                            # the resource that was validated 
    fhir:need @<VerificationResult.need>?;  # none | initial | periodic
    fhir:status @<VerificationResult.status>;  # attested | validated | in-process 
                                            # | req-revalid | val-fail | 
                                            # reval-fail 
    fhir:statusDate @<VerificationResult.statusDate>?;  # When the validation status was 
                                            # updated 
    fhir:validationType @<VerificationResult.validationType>?;  # nothing | primary | multiple
    fhir:validationProcess @<OneOrMore_VerificationResult.validationProcess>?;  # The primary process by which the 
                                            # target is validated (edit check; 
                                            # value set; primary source; 
                                            # multiple sources; standalone; in 
                                            # context) 
    fhir:frequency @<VerificationResult.frequency>?;  # Frequency of revalidation
    fhir:lastPerformed @<VerificationResult.lastPerformed>?;  # The date/time validation was last 
                                            # completed (including failed 
                                            # validations) 
    fhir:nextScheduled @<VerificationResult.nextScheduled>?;  # The date when target is next 
                                            # validated, if appropriate 
    fhir:failureAction @<VerificationResult.failureAction>?;  # fatal | warn | rec-only | none
    fhir:primarySource @<OneOrMore_VerificationResult.primarySource>?;  # Information about the primary 
                                            # source(s) involved in validation 
    fhir:attestation @<VerificationResult.attestation>?;  # Information about the entity 
                                            # attesting to information 
    fhir:validator @<OneOrMore_VerificationResult.validator>?;  # Information about the entity 
                                            # validating information 
}  

# Information about the primary source(s) involved in validation
<VerificationResult.primarySource> EXTENDS @<BackboneElement> CLOSED {   
    fhir:who @<VerificationResult.primarySource.who> AND {fhir:link 
    			@<Organization> OR 
    			@<Practitioner> OR 
    			@<PractitionerRole> }?;  # Reference to the primary source
    fhir:type @<OneOrMore_VerificationResult.primarySource.type>?;  # Type of primary source (License 
                                            # Board; Primary Education; 
                                            # Continuing Education; Postal 
                                            # Service; Relationship owner; 
                                            # Registration Authority; legal 
                                            # source; issuing source; 
                                            # authoritative source) 
    fhir:communicationMethod @<OneOrMore_VerificationResult.primarySource.communicationMethod>?;  # Method for exchanging information 
                                            # with the primary source 
    fhir:validationStatus @<VerificationResult.primarySource.validationStatus>?;  # successful | failed | unknown
    fhir:validationDate @<VerificationResult.primarySource.validationDate>?;  # When the target was validated 
                                            # against the primary source 
    fhir:canPushUpdates @<VerificationResult.primarySource.canPushUpdates>?;  # yes | no | undetermined
    fhir:pushTypeAvailable @<OneOrMore_VerificationResult.primarySource.pushTypeAvailable>?;  # specific | any | source
}  

# Information about the entity attesting to information
<VerificationResult.attestation> EXTENDS @<BackboneElement> CLOSED {   
    fhir:who @<VerificationResult.attestation.who> AND {fhir:link 
    			@<Organization> OR 
    			@<Practitioner> OR 
    			@<PractitionerRole> }?;  # The individual or organization 
                                            # attesting to information 
    fhir:onBehalfOf @<VerificationResult.attestation.onBehalfOf> AND {fhir:link 
    			@<Organization> OR 
    			@<Practitioner> OR 
    			@<PractitionerRole> }?;  # When the who is asserting on 
                                            # behalf of another (organization or 
                                            # individual) 
    fhir:communicationMethod @<VerificationResult.attestation.communicationMethod>?;  # The method by which attested 
                                            # information was 
                                            # submitted/retrieved 
    fhir:date @<VerificationResult.attestation.date>?;  # The date the information was 
                                            # attested to 
    fhir:sourceIdentityCertificate @<VerificationResult.attestation.sourceIdentityCertificate>?;  # A digital identity certificate 
                                            # associated with the attestation 
                                            # source 
    fhir:proxyIdentityCertificate @<VerificationResult.attestation.proxyIdentityCertificate>?;  # A digital identity certificate 
                                            # associated with the proxy entity 
                                            # submitting attested information on 
                                            # behalf of the attestation source 
    fhir:proxySignature @<VerificationResult.attestation.proxySignature>?;  # Proxy signature
    fhir:sourceSignature @<VerificationResult.attestation.sourceSignature>?;  # Attester signature
}  

# Information about the entity validating information
<VerificationResult.validator> EXTENDS @<BackboneElement> CLOSED {   
    fhir:organization @<VerificationResult.validator.organization> AND {fhir:link 
    			@<Organization> };  # Reference to the organization 
                                            # validating information 
    fhir:identityCertificate @<VerificationResult.validator.identityCertificate>?;  # A digital identity certificate 
                                            # associated with the validator 
    fhir:attestationSignature @<VerificationResult.validator.attestationSignature>?;  # Validator signature
}  

#---------------------- Data Types -------------------

#---------------------- Cardinality Types (OneOrMore) -------------------

<OneOrMore_VerificationResult.target_Resource> CLOSED {
    rdf:first @<VerificationResult.target> AND {fhir:link 
			@<Resource> } ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.target_Resource> 
}

<OneOrMore_VerificationResult.targetLocation> CLOSED {
    rdf:first @<VerificationResult.targetLocation>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.targetLocation> 
}

<OneOrMore_VerificationResult.validationProcess> CLOSED {
    rdf:first @<VerificationResult.validationProcess>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.validationProcess> 
}

<OneOrMore_VerificationResult.primarySource> CLOSED {
    rdf:first @<VerificationResult.primarySource>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.primarySource> 
}

<OneOrMore_VerificationResult.validator> CLOSED {
    rdf:first @<VerificationResult.validator>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.validator> 
}

<OneOrMore_VerificationResult.primarySource.type> CLOSED {
    rdf:first @<VerificationResult.primarySource.type>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.primarySource.type> 
}

<OneOrMore_VerificationResult.primarySource.communicationMethod> CLOSED {
    rdf:first @<VerificationResult.primarySource.communicationMethod>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.primarySource.communicationMethod> 
}

<OneOrMore_VerificationResult.primarySource.pushTypeAvailable> CLOSED {
    rdf:first @<VerificationResult.primarySource.pushTypeAvailable>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_VerificationResult.primarySource.pushTypeAvailable> 
}

#---------------------- Reference Types -------------------

#---------------------- Value Sets ------------------------
